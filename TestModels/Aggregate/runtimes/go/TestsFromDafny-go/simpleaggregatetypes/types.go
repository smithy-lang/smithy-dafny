// Code generated by smithy-go-codegen DO NOT EDIT.

package SimpleAggregateTypes

type StringStructure_smithygenerated struct {
	Value *string
}

func (input StringStructure_smithygenerated) Validate() error {
	return nil
}

type NestedStructure_smithygenerated struct {
	StringStructure *StringStructure
}

func (input NestedStructure_smithygenerated) Validate() error {
	return nil
}

type StructureListElement_smithygenerated struct {
	IntegerValue *int32

	StringValue *string
}

func (input StructureListElement_smithygenerated) Validate() error {
	return nil
}

type GetAggregateInput_smithygenerated struct {
	NestedStructure *NestedStructure

	SimpleIntegerMap map[string]int32

	SimpleStringList []string

	SimpleStringMap map[string]string

	StructureList []StructureListElement
}

func (input GetAggregateInput_smithygenerated) Validate() error {
	for key, value := range input.SimpleIntegerMap {
		// To avoid declared and not used error for shapes which does not need validation check
		_ = key
		_ = value

	}

	for _, item := range input.SimpleStringList {
		// To avoid declared and not used error for shapes which does not need validation check
		_ = item

	}

	for key, value := range input.SimpleStringMap {
		// To avoid declared and not used error for shapes which does not need validation check
		_ = key
		_ = value

	}

	for _, item := range input.StructureList {
		// To avoid declared and not used error for shapes which does not need validation check
		_ = item

	}

	return nil
}

type GetAggregateOutput_smithygenerated struct {
	NestedStructure *NestedStructure

	SimpleIntegerMap map[string]int32

	SimpleStringList []string

	SimpleStringMap map[string]string

	StructureList []StructureListElement
}

func (input GetAggregateOutput_smithygenerated) Validate() error {
	for key, value := range input.SimpleIntegerMap {
		// To avoid declared and not used error for shapes which does not need validation check
		_ = key
		_ = value

	}

	for _, item := range input.SimpleStringList {
		// To avoid declared and not used error for shapes which does not need validation check
		_ = item

	}

	for key, value := range input.SimpleStringMap {
		// To avoid declared and not used error for shapes which does not need validation check
		_ = key
		_ = value

	}

	for _, item := range input.StructureList {
		// To avoid declared and not used error for shapes which does not need validation check
		_ = item

	}

	return nil
}

type SimpleAggregateConfig_smithygenerated struct {
}

func (input SimpleAggregateConfig_smithygenerated) Validate() error {
	return nil
}

type SimpleAggregateBaseException interface {
	// This is a dummy method to allow type assertion since Go empty interfaces
	// aren't useful for type assertion checks. No concrete class is expected to implement
	// this method. This is also not exported.
	interfaceBindingMethod()
}
