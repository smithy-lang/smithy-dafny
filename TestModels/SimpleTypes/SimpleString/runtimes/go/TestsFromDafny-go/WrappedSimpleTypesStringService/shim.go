// Code generated by smithy-go-codegen DO NOT EDIT.

package WrappedSimpleTypesStringService

import (
	"context"

	"github.com/dafny-lang/DafnyRuntimeGo/v4/dafny"
	"github.com/dafny-lang/DafnyStandardLibGo/Wrappers"
	"github.com/smithy-lang/smithy-dafny/TestModels/SimpleTypes/SimpleString/SimpleTypesSmithyStringTypes"
	"github.com/smithy-lang/smithy-dafny/TestModels/SimpleTypes/SimpleString/simpletypessmithystringsmithygenerated"
)

type Shim struct {
	SimpleTypesSmithyStringTypes.ISimpleTypesStringClient
	client *simpletypessmithystringsmithygenerated.Client
}

func (_static *CompanionStruct_Default___) WrappedSimpleString(inputConfig SimpleTypesSmithyStringTypes.SimpleStringConfig) Wrappers.Result {
	var nativeConfig = simpletypessmithystringsmithygenerated.SimpleStringConfig_FromDafny(inputConfig)
	var nativeClient, nativeError = simpletypessmithystringsmithygenerated.NewClient(nativeConfig)
	if nativeError != nil {
		return Wrappers.Companion_Result_.Create_Failure_(SimpleTypesSmithyStringTypes.Companion_Error_.Create_Opaque_(nativeError, dafny.SeqOfChars([]dafny.Char(nativeError.Error())...)))
	}
	return Wrappers.Companion_Result_.Create_Success_(&Shim{client: nativeClient})
}

func (shim *Shim) GetString(input SimpleTypesSmithyStringTypes.GetStringInput) Wrappers.Result {
	var native_request = simpletypessmithystringsmithygenerated.GetStringInput_FromDafny(input)
	var native_response, native_error = shim.client.GetString(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(simpletypessmithystringsmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(simpletypessmithystringsmithygenerated.GetStringOutput_ToDafny(*native_response))
}

func (shim *Shim) GetStringKnownValue(input SimpleTypesSmithyStringTypes.GetStringInput) Wrappers.Result {
	var native_request = simpletypessmithystringsmithygenerated.GetStringInput_FromDafny(input)
	var native_response, native_error = shim.client.GetStringKnownValue(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(simpletypessmithystringsmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(simpletypessmithystringsmithygenerated.GetStringOutput_ToDafny(*native_response))
}

func (shim *Shim) GetStringUTF8(input SimpleTypesSmithyStringTypes.GetStringUTF8Input) Wrappers.Result {
	var native_request = simpletypessmithystringsmithygenerated.GetStringUTF8Input_FromDafny(input)
	var native_response, native_error = shim.client.GetStringUTF8(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(simpletypessmithystringsmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(simpletypessmithystringsmithygenerated.GetStringUTF8Output_ToDafny(*native_response))
}

func (shim *Shim) GetStringUTF8KnownValue(input SimpleTypesSmithyStringTypes.GetStringUTF8Input) Wrappers.Result {
	var native_request = simpletypessmithystringsmithygenerated.GetStringUTF8Input_FromDafny(input)
	var native_response, native_error = shim.client.GetStringUTF8KnownValue(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(simpletypessmithystringsmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(simpletypessmithystringsmithygenerated.GetStringUTF8Output_ToDafny(*native_response))
}
