diff --git a/TestModels/aws-sdks/kms/runtimes/java/src/main/smithy-generated/software/amazon/cryptography/services/kms/internaldafny/ToDafny.java b/TestModels/aws-sdks/kms/runtimes/java/src/main/smithy-generated/software/amazon/cryptography/services/kms/internaldafny/ToDafny.java
index 5e894e4e..9d02d333 100644
--- a/TestModels/aws-sdks/kms/runtimes/java/src/main/smithy-generated/software/amazon/cryptography/services/kms/internaldafny/ToDafny.java
+++ b/TestModels/aws-sdks/kms/runtimes/java/src/main/smithy-generated/software/amazon/cryptography/services/kms/internaldafny/ToDafny.java
@@ -264,62 +264,47 @@ public class ToDafny {
     aliasName =
       Objects.nonNull(nativeValue.aliasName())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.aliasName()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> aliasArn;
     aliasArn =
       Objects.nonNull(nativeValue.aliasArn())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.aliasArn()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> targetKeyId;
     targetKeyId =
       Objects.nonNull(nativeValue.targetKeyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.targetKeyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> creationDate;
     creationDate =
       Objects.nonNull(nativeValue.creationDate())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.creationDate()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> lastUpdatedDate;
     lastUpdatedDate =
       Objects.nonNull(nativeValue.lastUpdatedDate())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.lastUpdatedDate()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new AliasListEntry(
       aliasName,
       aliasArn,
@@ -347,14 +332,11 @@ public class ToDafny {
     keyId =
       Objects.nonNull(nativeValue.keyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new CancelKeyDeletionResponse(keyId);
   }
 
@@ -403,104 +385,81 @@ public class ToDafny {
     cloudHsmClusterId =
       Objects.nonNull(nativeValue.cloudHsmClusterId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.cloudHsmClusterId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> trustAnchorCertificate;
     trustAnchorCertificate =
       Objects.nonNull(nativeValue.trustAnchorCertificate())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.trustAnchorCertificate()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> keyStorePassword;
     keyStorePassword =
       Objects.nonNull(nativeValue.keyStorePassword())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyStorePassword()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<CustomKeyStoreType> customKeyStoreType;
     customKeyStoreType =
       Objects.nonNull(nativeValue.customKeyStoreType())
         ? Option.create_Some(
-          CustomKeyStoreType._typeDescriptor(),
           ToDafny.CustomKeyStoreType(nativeValue.customKeyStoreType())
         )
-        : Option.create_None(CustomKeyStoreType._typeDescriptor());
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> xksProxyUriEndpoint;
     xksProxyUriEndpoint =
       Objects.nonNull(nativeValue.xksProxyUriEndpoint())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.xksProxyUriEndpoint()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> xksProxyUriPath;
     xksProxyUriPath =
       Objects.nonNull(nativeValue.xksProxyUriPath())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.xksProxyUriPath()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> xksProxyVpcEndpointServiceName;
     xksProxyVpcEndpointServiceName =
       Objects.nonNull(nativeValue.xksProxyVpcEndpointServiceName())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.xksProxyVpcEndpointServiceName()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<
       XksProxyAuthenticationCredentialType
     > xksProxyAuthenticationCredential;
     xksProxyAuthenticationCredential =
       Objects.nonNull(nativeValue.xksProxyAuthenticationCredential())
         ? Option.create_Some(
-          XksProxyAuthenticationCredentialType._typeDescriptor(),
           ToDafny.XksProxyAuthenticationCredentialType(
             nativeValue.xksProxyAuthenticationCredential()
           )
         )
-        : Option.create_None(
-          XksProxyAuthenticationCredentialType._typeDescriptor()
-        );
+        : Option.create_None();
     Option<XksProxyConnectivityType> xksProxyConnectivity;
     xksProxyConnectivity =
       Objects.nonNull(nativeValue.xksProxyConnectivity())
         ? Option.create_Some(
-          XksProxyConnectivityType._typeDescriptor(),
           ToDafny.XksProxyConnectivityType(nativeValue.xksProxyConnectivity())
         )
-        : Option.create_None(XksProxyConnectivityType._typeDescriptor());
+        : Option.create_None();
     return new CreateCustomKeyStoreRequest(
       customKeyStoreName,
       cloudHsmClusterId,
@@ -522,14 +481,11 @@ public class ToDafny {
     customKeyStoreId =
       Objects.nonNull(nativeValue.customKeyStoreId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.customKeyStoreId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new CreateCustomKeyStoreResponse(customKeyStoreId);
   }
 
@@ -550,58 +506,42 @@ public class ToDafny {
     retiringPrincipal =
       Objects.nonNull(nativeValue.retiringPrincipal())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.retiringPrincipal()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     DafnySequence<? extends GrantOperation> operations;
     operations = ToDafny.GrantOperationList(nativeValue.operations());
     Option<GrantConstraints> constraints;
     constraints =
       Objects.nonNull(nativeValue.constraints())
         ? Option.create_Some(
-          GrantConstraints._typeDescriptor(),
           ToDafny.GrantConstraints(nativeValue.constraints())
         )
-        : Option.create_None(GrantConstraints._typeDescriptor());
+        : Option.create_None();
     Option<
       DafnySequence<? extends DafnySequence<? extends Character>>
     > grantTokens;
     grantTokens =
       (Objects.nonNull(nativeValue.grantTokens()) &&
           nativeValue.grantTokens().size() > 0)
-        ? Option.create_Some(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
-          ToDafny.GrantTokenList(nativeValue.grantTokens())
-        )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        ? Option.create_Some(ToDafny.GrantTokenList(nativeValue.grantTokens()))
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> name;
     name =
       Objects.nonNull(nativeValue.name())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.name()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<Boolean> dryRun;
     dryRun =
       Objects.nonNull(nativeValue.dryRun())
-        ? Option.create_Some(TypeDescriptor.BOOLEAN, (nativeValue.dryRun()))
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.dryRun()))
+        : Option.create_None();
     return new CreateGrantRequest(
       keyId,
       granteePrincipal,
@@ -621,26 +561,20 @@ public class ToDafny {
     grantToken =
       Objects.nonNull(nativeValue.grantToken())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.grantToken()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> grantId;
     grantId =
       Objects.nonNull(nativeValue.grantId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.grantId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new CreateGrantResponse(grantToken, grantId);
   }
 
@@ -651,108 +585,75 @@ public class ToDafny {
     policy =
       Objects.nonNull(nativeValue.policy())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.policy()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> description;
     description =
       Objects.nonNull(nativeValue.description())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.description()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<KeyUsageType> keyUsage;
     keyUsage =
       Objects.nonNull(nativeValue.keyUsage())
-        ? Option.create_Some(
-          KeyUsageType._typeDescriptor(),
-          ToDafny.KeyUsageType(nativeValue.keyUsage())
-        )
-        : Option.create_None(KeyUsageType._typeDescriptor());
+        ? Option.create_Some(ToDafny.KeyUsageType(nativeValue.keyUsage()))
+        : Option.create_None();
     Option<CustomerMasterKeySpec> customerMasterKeySpec;
     customerMasterKeySpec =
       Objects.nonNull(nativeValue.customerMasterKeySpec())
         ? Option.create_Some(
-          CustomerMasterKeySpec._typeDescriptor(),
           ToDafny.CustomerMasterKeySpec(nativeValue.customerMasterKeySpec())
         )
-        : Option.create_None(CustomerMasterKeySpec._typeDescriptor());
+        : Option.create_None();
     Option<KeySpec> keySpec;
     keySpec =
       Objects.nonNull(nativeValue.keySpec())
-        ? Option.create_Some(
-          KeySpec._typeDescriptor(),
-          ToDafny.KeySpec(nativeValue.keySpec())
-        )
-        : Option.create_None(KeySpec._typeDescriptor());
+        ? Option.create_Some(ToDafny.KeySpec(nativeValue.keySpec()))
+        : Option.create_None();
     Option<OriginType> origin;
     origin =
       Objects.nonNull(nativeValue.origin())
-        ? Option.create_Some(
-          OriginType._typeDescriptor(),
-          ToDafny.OriginType(nativeValue.origin())
-        )
-        : Option.create_None(OriginType._typeDescriptor());
+        ? Option.create_Some(ToDafny.OriginType(nativeValue.origin()))
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> customKeyStoreId;
     customKeyStoreId =
       Objects.nonNull(nativeValue.customKeyStoreId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.customKeyStoreId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<Boolean> bypassPolicyLockoutSafetyCheck;
     bypassPolicyLockoutSafetyCheck =
       Objects.nonNull(nativeValue.bypassPolicyLockoutSafetyCheck())
-        ? Option.create_Some(
-          TypeDescriptor.BOOLEAN,
-          (nativeValue.bypassPolicyLockoutSafetyCheck())
-        )
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.bypassPolicyLockoutSafetyCheck()))
+        : Option.create_None();
     Option<DafnySequence<? extends Tag>> tags;
     tags =
       (Objects.nonNull(nativeValue.tags()) && nativeValue.tags().size() > 0)
-        ? Option.create_Some(
-          DafnySequence._typeDescriptor(Tag._typeDescriptor()),
-          ToDafny.TagList(nativeValue.tags())
-        )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(Tag._typeDescriptor())
-        );
+        ? Option.create_Some(ToDafny.TagList(nativeValue.tags()))
+        : Option.create_None();
     Option<Boolean> multiRegion;
     multiRegion =
       Objects.nonNull(nativeValue.multiRegion())
-        ? Option.create_Some(
-          TypeDescriptor.BOOLEAN,
-          (nativeValue.multiRegion())
-        )
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.multiRegion()))
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> xksKeyId;
     xksKeyId =
       Objects.nonNull(nativeValue.xksKeyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.xksKeyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new CreateKeyRequest(
       policy,
       description,
@@ -774,11 +675,8 @@ public class ToDafny {
     Option<KeyMetadata> keyMetadata;
     keyMetadata =
       Objects.nonNull(nativeValue.keyMetadata())
-        ? Option.create_Some(
-          KeyMetadata._typeDescriptor(),
-          ToDafny.KeyMetadata(nativeValue.keyMetadata())
-        )
-        : Option.create_None(KeyMetadata._typeDescriptor());
+        ? Option.create_Some(ToDafny.KeyMetadata(nativeValue.keyMetadata()))
+        : Option.create_None();
     return new CreateKeyResponse(keyMetadata);
   }
 
@@ -803,94 +701,75 @@ public class ToDafny {
     customKeyStoreId =
       Objects.nonNull(nativeValue.customKeyStoreId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.customKeyStoreId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> customKeyStoreName;
     customKeyStoreName =
       Objects.nonNull(nativeValue.customKeyStoreName())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.customKeyStoreName()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> cloudHsmClusterId;
     cloudHsmClusterId =
       Objects.nonNull(nativeValue.cloudHsmClusterId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.cloudHsmClusterId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> trustAnchorCertificate;
     trustAnchorCertificate =
       Objects.nonNull(nativeValue.trustAnchorCertificate())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.trustAnchorCertificate()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<ConnectionStateType> connectionState;
     connectionState =
       Objects.nonNull(nativeValue.connectionState())
         ? Option.create_Some(
-          ConnectionStateType._typeDescriptor(),
           ToDafny.ConnectionStateType(nativeValue.connectionState())
         )
-        : Option.create_None(ConnectionStateType._typeDescriptor());
+        : Option.create_None();
     Option<ConnectionErrorCodeType> connectionErrorCode;
     connectionErrorCode =
       Objects.nonNull(nativeValue.connectionErrorCode())
         ? Option.create_Some(
-          ConnectionErrorCodeType._typeDescriptor(),
           ToDafny.ConnectionErrorCodeType(nativeValue.connectionErrorCode())
         )
-        : Option.create_None(ConnectionErrorCodeType._typeDescriptor());
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> creationDate;
     creationDate =
       Objects.nonNull(nativeValue.creationDate())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.creationDate()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<CustomKeyStoreType> customKeyStoreType;
     customKeyStoreType =
       Objects.nonNull(nativeValue.customKeyStoreType())
         ? Option.create_Some(
-          CustomKeyStoreType._typeDescriptor(),
           ToDafny.CustomKeyStoreType(nativeValue.customKeyStoreType())
         )
-        : Option.create_None(CustomKeyStoreType._typeDescriptor());
+        : Option.create_None();
     Option<XksProxyConfigurationType> xksProxyConfiguration;
     xksProxyConfiguration =
       Objects.nonNull(nativeValue.xksProxyConfiguration())
         ? Option.create_Some(
-          XksProxyConfigurationType._typeDescriptor(),
           ToDafny.XksProxyConfigurationType(nativeValue.xksProxyConfiguration())
         )
-        : Option.create_None(XksProxyConfigurationType._typeDescriptor());
+        : Option.create_None();
     return new CustomKeyStoresListEntry(
       customKeyStoreId,
       customKeyStoreName,
@@ -922,68 +801,43 @@ public class ToDafny {
       (Objects.nonNull(nativeValue.encryptionContext()) &&
           nativeValue.encryptionContext().size() > 0)
         ? Option.create_Some(
-          DafnyMap._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
           ToDafny.EncryptionContextType(nativeValue.encryptionContext())
         )
-        : Option.create_None(
-          DafnyMap._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        : Option.create_None();
     Option<
       DafnySequence<? extends DafnySequence<? extends Character>>
     > grantTokens;
     grantTokens =
       (Objects.nonNull(nativeValue.grantTokens()) &&
           nativeValue.grantTokens().size() > 0)
-        ? Option.create_Some(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
-          ToDafny.GrantTokenList(nativeValue.grantTokens())
-        )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        ? Option.create_Some(ToDafny.GrantTokenList(nativeValue.grantTokens()))
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> keyId;
     keyId =
       Objects.nonNull(nativeValue.keyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<EncryptionAlgorithmSpec> encryptionAlgorithm;
     encryptionAlgorithm =
       Objects.nonNull(nativeValue.encryptionAlgorithm())
         ? Option.create_Some(
-          EncryptionAlgorithmSpec._typeDescriptor(),
           ToDafny.EncryptionAlgorithmSpec(nativeValue.encryptionAlgorithm())
         )
-        : Option.create_None(EncryptionAlgorithmSpec._typeDescriptor());
+        : Option.create_None();
     Option<RecipientInfo> recipient;
     recipient =
       Objects.nonNull(nativeValue.recipient())
-        ? Option.create_Some(
-          RecipientInfo._typeDescriptor(),
-          ToDafny.RecipientInfo(nativeValue.recipient())
-        )
-        : Option.create_None(RecipientInfo._typeDescriptor());
+        ? Option.create_Some(ToDafny.RecipientInfo(nativeValue.recipient()))
+        : Option.create_None();
     Option<Boolean> dryRun;
     dryRun =
       Objects.nonNull(nativeValue.dryRun())
-        ? Option.create_Some(TypeDescriptor.BOOLEAN, (nativeValue.dryRun()))
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.dryRun()))
+        : Option.create_None();
     return new DecryptRequest(
       ciphertextBlob,
       encryptionContext,
@@ -1002,46 +856,36 @@ public class ToDafny {
     keyId =
       Objects.nonNull(nativeValue.keyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Byte>> plaintext;
     plaintext =
       Objects.nonNull(nativeValue.plaintext())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
             nativeValue.plaintext().asByteArray()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE)
-        );
+        : Option.create_None();
     Option<EncryptionAlgorithmSpec> encryptionAlgorithm;
     encryptionAlgorithm =
       Objects.nonNull(nativeValue.encryptionAlgorithm())
         ? Option.create_Some(
-          EncryptionAlgorithmSpec._typeDescriptor(),
           ToDafny.EncryptionAlgorithmSpec(nativeValue.encryptionAlgorithm())
         )
-        : Option.create_None(EncryptionAlgorithmSpec._typeDescriptor());
+        : Option.create_None();
     Option<DafnySequence<? extends Byte>> ciphertextForRecipient;
     ciphertextForRecipient =
       Objects.nonNull(nativeValue.ciphertextForRecipient())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
             nativeValue.ciphertextForRecipient().asByteArray()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE)
-        );
+        : Option.create_None();
     return new DecryptResponse(
       keyId,
       plaintext,
@@ -1111,30 +955,18 @@ public class ToDafny {
     grantTokens =
       (Objects.nonNull(nativeValue.grantTokens()) &&
           nativeValue.grantTokens().size() > 0)
-        ? Option.create_Some(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
-          ToDafny.GrantTokenList(nativeValue.grantTokens())
-        )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        ? Option.create_Some(ToDafny.GrantTokenList(nativeValue.grantTokens()))
+        : Option.create_None();
     Option<Boolean> dryRun;
     dryRun =
       Objects.nonNull(nativeValue.dryRun())
-        ? Option.create_Some(TypeDescriptor.BOOLEAN, (nativeValue.dryRun()))
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.dryRun()))
+        : Option.create_None();
     Option<RecipientInfo> recipient;
     recipient =
       Objects.nonNull(nativeValue.recipient())
-        ? Option.create_Some(
-          RecipientInfo._typeDescriptor(),
-          ToDafny.RecipientInfo(nativeValue.recipient())
-        )
-        : Option.create_None(RecipientInfo._typeDescriptor());
+        ? Option.create_Some(ToDafny.RecipientInfo(nativeValue.recipient()))
+        : Option.create_None();
     return new DeriveSharedSecretRequest(
       keyId,
       keyAgreementAlgorithm,
@@ -1152,54 +984,41 @@ public class ToDafny {
     keyId =
       Objects.nonNull(nativeValue.keyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Byte>> sharedSecret;
     sharedSecret =
       Objects.nonNull(nativeValue.sharedSecret())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
             nativeValue.sharedSecret().asByteArray()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Byte>> ciphertextForRecipient;
     ciphertextForRecipient =
       Objects.nonNull(nativeValue.ciphertextForRecipient())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
             nativeValue.ciphertextForRecipient().asByteArray()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE)
-        );
+        : Option.create_None();
     Option<KeyAgreementAlgorithmSpec> keyAgreementAlgorithm;
     keyAgreementAlgorithm =
       Objects.nonNull(nativeValue.keyAgreementAlgorithm())
         ? Option.create_Some(
-          KeyAgreementAlgorithmSpec._typeDescriptor(),
           ToDafny.KeyAgreementAlgorithmSpec(nativeValue.keyAgreementAlgorithm())
         )
-        : Option.create_None(KeyAgreementAlgorithmSpec._typeDescriptor());
+        : Option.create_None();
     Option<OriginType> keyOrigin;
     keyOrigin =
       Objects.nonNull(nativeValue.keyOrigin())
-        ? Option.create_Some(
-          OriginType._typeDescriptor(),
-          ToDafny.OriginType(nativeValue.keyOrigin())
-        )
-        : Option.create_None(OriginType._typeDescriptor());
+        ? Option.create_Some(ToDafny.OriginType(nativeValue.keyOrigin()))
+        : Option.create_None();
     return new DeriveSharedSecretResponse(
       keyId,
       sharedSecret,
@@ -1216,43 +1035,34 @@ public class ToDafny {
     customKeyStoreId =
       Objects.nonNull(nativeValue.customKeyStoreId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.customKeyStoreId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> customKeyStoreName;
     customKeyStoreName =
       Objects.nonNull(nativeValue.customKeyStoreName())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.customKeyStoreName()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<Integer> limit;
     limit =
       Objects.nonNull(nativeValue.limit())
-        ? Option.create_Some(TypeDescriptor.INT, (nativeValue.limit()))
-        : Option.create_None(TypeDescriptor.INT);
+        ? Option.create_Some((nativeValue.limit()))
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> marker;
     marker =
       Objects.nonNull(nativeValue.marker())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.marker()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new DescribeCustomKeyStoresRequest(
       customKeyStoreId,
       customKeyStoreName,
@@ -1269,33 +1079,23 @@ public class ToDafny {
       (Objects.nonNull(nativeValue.customKeyStores()) &&
           nativeValue.customKeyStores().size() > 0)
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(
-            CustomKeyStoresListEntry._typeDescriptor()
-          ),
           ToDafny.CustomKeyStoresList(nativeValue.customKeyStores())
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(
-            CustomKeyStoresListEntry._typeDescriptor()
-          )
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> nextMarker;
     nextMarker =
       Objects.nonNull(nativeValue.nextMarker())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.nextMarker()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<Boolean> truncated;
     truncated =
       Objects.nonNull(nativeValue.truncated())
-        ? Option.create_Some(TypeDescriptor.BOOLEAN, (nativeValue.truncated()))
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.truncated()))
+        : Option.create_None();
     return new DescribeCustomKeyStoresResponse(
       customKeyStores,
       nextMarker,
@@ -1317,17 +1117,8 @@ public class ToDafny {
     grantTokens =
       (Objects.nonNull(nativeValue.grantTokens()) &&
           nativeValue.grantTokens().size() > 0)
-        ? Option.create_Some(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
-          ToDafny.GrantTokenList(nativeValue.grantTokens())
-        )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        ? Option.create_Some(ToDafny.GrantTokenList(nativeValue.grantTokens()))
+        : Option.create_None();
     return new DescribeKeyRequest(keyId, grantTokens);
   }
 
@@ -1337,11 +1128,8 @@ public class ToDafny {
     Option<KeyMetadata> keyMetadata;
     keyMetadata =
       Objects.nonNull(nativeValue.keyMetadata())
-        ? Option.create_Some(
-          KeyMetadata._typeDescriptor(),
-          ToDafny.KeyMetadata(nativeValue.keyMetadata())
-        )
-        : Option.create_None(KeyMetadata._typeDescriptor());
+        ? Option.create_Some(ToDafny.KeyMetadata(nativeValue.keyMetadata()))
+        : Option.create_None();
     return new DescribeKeyResponse(keyMetadata);
   }
 
@@ -1406,11 +1194,8 @@ public class ToDafny {
     Option<Integer> rotationPeriodInDays;
     rotationPeriodInDays =
       Objects.nonNull(nativeValue.rotationPeriodInDays())
-        ? Option.create_Some(
-          TypeDescriptor.INT,
-          (nativeValue.rotationPeriodInDays())
-        )
-        : Option.create_None(TypeDescriptor.INT);
+        ? Option.create_Some((nativeValue.rotationPeriodInDays()))
+        : Option.create_None();
     return new EnableKeyRotationRequest(keyId, rotationPeriodInDays);
   }
 
@@ -1462,48 +1247,29 @@ public class ToDafny {
       (Objects.nonNull(nativeValue.encryptionContext()) &&
           nativeValue.encryptionContext().size() > 0)
         ? Option.create_Some(
-          DafnyMap._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
           ToDafny.EncryptionContextType(nativeValue.encryptionContext())
         )
-        : Option.create_None(
-          DafnyMap._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        : Option.create_None();
     Option<
       DafnySequence<? extends DafnySequence<? extends Character>>
     > grantTokens;
     grantTokens =
       (Objects.nonNull(nativeValue.grantTokens()) &&
           nativeValue.grantTokens().size() > 0)
-        ? Option.create_Some(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
-          ToDafny.GrantTokenList(nativeValue.grantTokens())
-        )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        ? Option.create_Some(ToDafny.GrantTokenList(nativeValue.grantTokens()))
+        : Option.create_None();
     Option<EncryptionAlgorithmSpec> encryptionAlgorithm;
     encryptionAlgorithm =
       Objects.nonNull(nativeValue.encryptionAlgorithm())
         ? Option.create_Some(
-          EncryptionAlgorithmSpec._typeDescriptor(),
           ToDafny.EncryptionAlgorithmSpec(nativeValue.encryptionAlgorithm())
         )
-        : Option.create_None(EncryptionAlgorithmSpec._typeDescriptor());
+        : Option.create_None();
     Option<Boolean> dryRun;
     dryRun =
       Objects.nonNull(nativeValue.dryRun())
-        ? Option.create_Some(TypeDescriptor.BOOLEAN, (nativeValue.dryRun()))
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.dryRun()))
+        : Option.create_None();
     return new EncryptRequest(
       keyId,
       plaintext,
@@ -1521,34 +1287,27 @@ public class ToDafny {
     ciphertextBlob =
       Objects.nonNull(nativeValue.ciphertextBlob())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
             nativeValue.ciphertextBlob().asByteArray()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> keyId;
     keyId =
       Objects.nonNull(nativeValue.keyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<EncryptionAlgorithmSpec> encryptionAlgorithm;
     encryptionAlgorithm =
       Objects.nonNull(nativeValue.encryptionAlgorithm())
         ? Option.create_Some(
-          EncryptionAlgorithmSpec._typeDescriptor(),
           ToDafny.EncryptionAlgorithmSpec(nativeValue.encryptionAlgorithm())
         )
-        : Option.create_None(EncryptionAlgorithmSpec._typeDescriptor());
+        : Option.create_None();
     return new EncryptResponse(ciphertextBlob, keyId, encryptionAlgorithm);
   }
 
@@ -1565,18 +1324,9 @@ public class ToDafny {
       (Objects.nonNull(nativeValue.encryptionContext()) &&
           nativeValue.encryptionContext().size() > 0)
         ? Option.create_Some(
-          DafnyMap._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
           ToDafny.EncryptionContextType(nativeValue.encryptionContext())
         )
-        : Option.create_None(
-          DafnyMap._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        : Option.create_None();
     DafnySequence<? extends Character> keyId;
     keyId =
       software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
@@ -1590,30 +1340,18 @@ public class ToDafny {
     grantTokens =
       (Objects.nonNull(nativeValue.grantTokens()) &&
           nativeValue.grantTokens().size() > 0)
-        ? Option.create_Some(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
-          ToDafny.GrantTokenList(nativeValue.grantTokens())
-        )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        ? Option.create_Some(ToDafny.GrantTokenList(nativeValue.grantTokens()))
+        : Option.create_None();
     Option<RecipientInfo> recipient;
     recipient =
       Objects.nonNull(nativeValue.recipient())
-        ? Option.create_Some(
-          RecipientInfo._typeDescriptor(),
-          ToDafny.RecipientInfo(nativeValue.recipient())
-        )
-        : Option.create_None(RecipientInfo._typeDescriptor());
+        ? Option.create_Some(ToDafny.RecipientInfo(nativeValue.recipient()))
+        : Option.create_None();
     Option<Boolean> dryRun;
     dryRun =
       Objects.nonNull(nativeValue.dryRun())
-        ? Option.create_Some(TypeDescriptor.BOOLEAN, (nativeValue.dryRun()))
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.dryRun()))
+        : Option.create_None();
     return new GenerateDataKeyPairRequest(
       encryptionContext,
       keyId,
@@ -1631,70 +1369,52 @@ public class ToDafny {
     privateKeyCiphertextBlob =
       Objects.nonNull(nativeValue.privateKeyCiphertextBlob())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
             nativeValue.privateKeyCiphertextBlob().asByteArray()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Byte>> privateKeyPlaintext;
     privateKeyPlaintext =
       Objects.nonNull(nativeValue.privateKeyPlaintext())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
             nativeValue.privateKeyPlaintext().asByteArray()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Byte>> publicKey;
     publicKey =
       Objects.nonNull(nativeValue.publicKey())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
             nativeValue.publicKey().asByteArray()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> keyId;
     keyId =
       Objects.nonNull(nativeValue.keyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DataKeyPairSpec> keyPairSpec;
     keyPairSpec =
       Objects.nonNull(nativeValue.keyPairSpec())
-        ? Option.create_Some(
-          DataKeyPairSpec._typeDescriptor(),
-          ToDafny.DataKeyPairSpec(nativeValue.keyPairSpec())
-        )
-        : Option.create_None(DataKeyPairSpec._typeDescriptor());
+        ? Option.create_Some(ToDafny.DataKeyPairSpec(nativeValue.keyPairSpec()))
+        : Option.create_None();
     Option<DafnySequence<? extends Byte>> ciphertextForRecipient;
     ciphertextForRecipient =
       Objects.nonNull(nativeValue.ciphertextForRecipient())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
             nativeValue.ciphertextForRecipient().asByteArray()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE)
-        );
+        : Option.create_None();
     return new GenerateDataKeyPairResponse(
       privateKeyCiphertextBlob,
       privateKeyPlaintext,
@@ -1718,18 +1438,9 @@ public class ToDafny {
       (Objects.nonNull(nativeValue.encryptionContext()) &&
           nativeValue.encryptionContext().size() > 0)
         ? Option.create_Some(
-          DafnyMap._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
           ToDafny.EncryptionContextType(nativeValue.encryptionContext())
         )
-        : Option.create_None(
-          DafnyMap._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        : Option.create_None();
     DafnySequence<? extends Character> keyId;
     keyId =
       software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
@@ -1743,22 +1454,13 @@ public class ToDafny {
     grantTokens =
       (Objects.nonNull(nativeValue.grantTokens()) &&
           nativeValue.grantTokens().size() > 0)
-        ? Option.create_Some(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
-          ToDafny.GrantTokenList(nativeValue.grantTokens())
-        )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        ? Option.create_Some(ToDafny.GrantTokenList(nativeValue.grantTokens()))
+        : Option.create_None();
     Option<Boolean> dryRun;
     dryRun =
       Objects.nonNull(nativeValue.dryRun())
-        ? Option.create_Some(TypeDescriptor.BOOLEAN, (nativeValue.dryRun()))
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.dryRun()))
+        : Option.create_None();
     return new GenerateDataKeyPairWithoutPlaintextRequest(
       encryptionContext,
       keyId,
@@ -1775,46 +1477,34 @@ public class ToDafny {
     privateKeyCiphertextBlob =
       Objects.nonNull(nativeValue.privateKeyCiphertextBlob())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
             nativeValue.privateKeyCiphertextBlob().asByteArray()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Byte>> publicKey;
     publicKey =
       Objects.nonNull(nativeValue.publicKey())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
             nativeValue.publicKey().asByteArray()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> keyId;
     keyId =
       Objects.nonNull(nativeValue.keyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DataKeyPairSpec> keyPairSpec;
     keyPairSpec =
       Objects.nonNull(nativeValue.keyPairSpec())
-        ? Option.create_Some(
-          DataKeyPairSpec._typeDescriptor(),
-          ToDafny.DataKeyPairSpec(nativeValue.keyPairSpec())
-        )
-        : Option.create_None(DataKeyPairSpec._typeDescriptor());
+        ? Option.create_Some(ToDafny.DataKeyPairSpec(nativeValue.keyPairSpec()))
+        : Option.create_None();
     return new GenerateDataKeyPairWithoutPlaintextResponse(
       privateKeyCiphertextBlob,
       publicKey,
@@ -1841,61 +1531,37 @@ public class ToDafny {
       (Objects.nonNull(nativeValue.encryptionContext()) &&
           nativeValue.encryptionContext().size() > 0)
         ? Option.create_Some(
-          DafnyMap._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
           ToDafny.EncryptionContextType(nativeValue.encryptionContext())
         )
-        : Option.create_None(
-          DafnyMap._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        : Option.create_None();
     Option<Integer> numberOfBytes;
     numberOfBytes =
       Objects.nonNull(nativeValue.numberOfBytes())
-        ? Option.create_Some(TypeDescriptor.INT, (nativeValue.numberOfBytes()))
-        : Option.create_None(TypeDescriptor.INT);
+        ? Option.create_Some((nativeValue.numberOfBytes()))
+        : Option.create_None();
     Option<DataKeySpec> keySpec;
     keySpec =
       Objects.nonNull(nativeValue.keySpec())
-        ? Option.create_Some(
-          DataKeySpec._typeDescriptor(),
-          ToDafny.DataKeySpec(nativeValue.keySpec())
-        )
-        : Option.create_None(DataKeySpec._typeDescriptor());
+        ? Option.create_Some(ToDafny.DataKeySpec(nativeValue.keySpec()))
+        : Option.create_None();
     Option<
       DafnySequence<? extends DafnySequence<? extends Character>>
     > grantTokens;
     grantTokens =
       (Objects.nonNull(nativeValue.grantTokens()) &&
           nativeValue.grantTokens().size() > 0)
-        ? Option.create_Some(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
-          ToDafny.GrantTokenList(nativeValue.grantTokens())
-        )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        ? Option.create_Some(ToDafny.GrantTokenList(nativeValue.grantTokens()))
+        : Option.create_None();
     Option<RecipientInfo> recipient;
     recipient =
       Objects.nonNull(nativeValue.recipient())
-        ? Option.create_Some(
-          RecipientInfo._typeDescriptor(),
-          ToDafny.RecipientInfo(nativeValue.recipient())
-        )
-        : Option.create_None(RecipientInfo._typeDescriptor());
+        ? Option.create_Some(ToDafny.RecipientInfo(nativeValue.recipient()))
+        : Option.create_None();
     Option<Boolean> dryRun;
     dryRun =
       Objects.nonNull(nativeValue.dryRun())
-        ? Option.create_Some(TypeDescriptor.BOOLEAN, (nativeValue.dryRun()))
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.dryRun()))
+        : Option.create_None();
     return new GenerateDataKeyRequest(
       keyId,
       encryptionContext,
@@ -1914,50 +1580,38 @@ public class ToDafny {
     ciphertextBlob =
       Objects.nonNull(nativeValue.ciphertextBlob())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
             nativeValue.ciphertextBlob().asByteArray()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Byte>> plaintext;
     plaintext =
       Objects.nonNull(nativeValue.plaintext())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
             nativeValue.plaintext().asByteArray()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> keyId;
     keyId =
       Objects.nonNull(nativeValue.keyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Byte>> ciphertextForRecipient;
     ciphertextForRecipient =
       Objects.nonNull(nativeValue.ciphertextForRecipient())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
             nativeValue.ciphertextForRecipient().asByteArray()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE)
-        );
+        : Option.create_None();
     return new GenerateDataKeyResponse(
       ciphertextBlob,
       plaintext,
@@ -1984,53 +1638,32 @@ public class ToDafny {
       (Objects.nonNull(nativeValue.encryptionContext()) &&
           nativeValue.encryptionContext().size() > 0)
         ? Option.create_Some(
-          DafnyMap._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
           ToDafny.EncryptionContextType(nativeValue.encryptionContext())
         )
-        : Option.create_None(
-          DafnyMap._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        : Option.create_None();
     Option<DataKeySpec> keySpec;
     keySpec =
       Objects.nonNull(nativeValue.keySpec())
-        ? Option.create_Some(
-          DataKeySpec._typeDescriptor(),
-          ToDafny.DataKeySpec(nativeValue.keySpec())
-        )
-        : Option.create_None(DataKeySpec._typeDescriptor());
+        ? Option.create_Some(ToDafny.DataKeySpec(nativeValue.keySpec()))
+        : Option.create_None();
     Option<Integer> numberOfBytes;
     numberOfBytes =
       Objects.nonNull(nativeValue.numberOfBytes())
-        ? Option.create_Some(TypeDescriptor.INT, (nativeValue.numberOfBytes()))
-        : Option.create_None(TypeDescriptor.INT);
+        ? Option.create_Some((nativeValue.numberOfBytes()))
+        : Option.create_None();
     Option<
       DafnySequence<? extends DafnySequence<? extends Character>>
     > grantTokens;
     grantTokens =
       (Objects.nonNull(nativeValue.grantTokens()) &&
           nativeValue.grantTokens().size() > 0)
-        ? Option.create_Some(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
-          ToDafny.GrantTokenList(nativeValue.grantTokens())
-        )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        ? Option.create_Some(ToDafny.GrantTokenList(nativeValue.grantTokens()))
+        : Option.create_None();
     Option<Boolean> dryRun;
     dryRun =
       Objects.nonNull(nativeValue.dryRun())
-        ? Option.create_Some(TypeDescriptor.BOOLEAN, (nativeValue.dryRun()))
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.dryRun()))
+        : Option.create_None();
     return new GenerateDataKeyWithoutPlaintextRequest(
       keyId,
       encryptionContext,
@@ -2048,26 +1681,20 @@ public class ToDafny {
     ciphertextBlob =
       Objects.nonNull(nativeValue.ciphertextBlob())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
             nativeValue.ciphertextBlob().asByteArray()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> keyId;
     keyId =
       Objects.nonNull(nativeValue.keyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new GenerateDataKeyWithoutPlaintextResponse(ciphertextBlob, keyId);
   }
 
@@ -2092,22 +1719,13 @@ public class ToDafny {
     grantTokens =
       (Objects.nonNull(nativeValue.grantTokens()) &&
           nativeValue.grantTokens().size() > 0)
-        ? Option.create_Some(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
-          ToDafny.GrantTokenList(nativeValue.grantTokens())
-        )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        ? Option.create_Some(ToDafny.GrantTokenList(nativeValue.grantTokens()))
+        : Option.create_None();
     Option<Boolean> dryRun;
     dryRun =
       Objects.nonNull(nativeValue.dryRun())
-        ? Option.create_Some(TypeDescriptor.BOOLEAN, (nativeValue.dryRun()))
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.dryRun()))
+        : Option.create_None();
     return new GenerateMacRequest(
       message,
       keyId,
@@ -2124,34 +1742,27 @@ public class ToDafny {
     mac =
       Objects.nonNull(nativeValue.mac())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
             nativeValue.mac().asByteArray()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE)
-        );
+        : Option.create_None();
     Option<MacAlgorithmSpec> macAlgorithm;
     macAlgorithm =
       Objects.nonNull(nativeValue.macAlgorithm())
         ? Option.create_Some(
-          MacAlgorithmSpec._typeDescriptor(),
           ToDafny.MacAlgorithmSpec(nativeValue.macAlgorithm())
         )
-        : Option.create_None(MacAlgorithmSpec._typeDescriptor());
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> keyId;
     keyId =
       Objects.nonNull(nativeValue.keyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new GenerateMacResponse(mac, macAlgorithm, keyId);
   }
 
@@ -2161,28 +1772,22 @@ public class ToDafny {
     Option<Integer> numberOfBytes;
     numberOfBytes =
       Objects.nonNull(nativeValue.numberOfBytes())
-        ? Option.create_Some(TypeDescriptor.INT, (nativeValue.numberOfBytes()))
-        : Option.create_None(TypeDescriptor.INT);
+        ? Option.create_Some((nativeValue.numberOfBytes()))
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> customKeyStoreId;
     customKeyStoreId =
       Objects.nonNull(nativeValue.customKeyStoreId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.customKeyStoreId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<RecipientInfo> recipient;
     recipient =
       Objects.nonNull(nativeValue.recipient())
-        ? Option.create_Some(
-          RecipientInfo._typeDescriptor(),
-          ToDafny.RecipientInfo(nativeValue.recipient())
-        )
-        : Option.create_None(RecipientInfo._typeDescriptor());
+        ? Option.create_Some(ToDafny.RecipientInfo(nativeValue.recipient()))
+        : Option.create_None();
     return new GenerateRandomRequest(
       numberOfBytes,
       customKeyStoreId,
@@ -2197,26 +1802,20 @@ public class ToDafny {
     plaintext =
       Objects.nonNull(nativeValue.plaintext())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
             nativeValue.plaintext().asByteArray()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Byte>> ciphertextForRecipient;
     ciphertextForRecipient =
       Objects.nonNull(nativeValue.ciphertextForRecipient())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
             nativeValue.ciphertextForRecipient().asByteArray()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE)
-        );
+        : Option.create_None();
     return new GenerateRandomResponse(plaintext, ciphertextForRecipient);
   }
 
@@ -2232,14 +1831,11 @@ public class ToDafny {
     policyName =
       Objects.nonNull(nativeValue.policyName())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.policyName()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new GetKeyPolicyRequest(keyId, policyName);
   }
 
@@ -2250,26 +1846,20 @@ public class ToDafny {
     policy =
       Objects.nonNull(nativeValue.policy())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.policy()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> policyName;
     policyName =
       Objects.nonNull(nativeValue.policyName())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.policyName()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new GetKeyPolicyResponse(policy, policyName);
   }
 
@@ -2290,55 +1880,40 @@ public class ToDafny {
     Option<Boolean> keyRotationEnabled;
     keyRotationEnabled =
       Objects.nonNull(nativeValue.keyRotationEnabled())
-        ? Option.create_Some(
-          TypeDescriptor.BOOLEAN,
-          (nativeValue.keyRotationEnabled())
-        )
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.keyRotationEnabled()))
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> keyId;
     keyId =
       Objects.nonNull(nativeValue.keyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<Integer> rotationPeriodInDays;
     rotationPeriodInDays =
       Objects.nonNull(nativeValue.rotationPeriodInDays())
-        ? Option.create_Some(
-          TypeDescriptor.INT,
-          (nativeValue.rotationPeriodInDays())
-        )
-        : Option.create_None(TypeDescriptor.INT);
+        ? Option.create_Some((nativeValue.rotationPeriodInDays()))
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> nextRotationDate;
     nextRotationDate =
       Objects.nonNull(nativeValue.nextRotationDate())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.nextRotationDate()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> onDemandRotationStartDate;
     onDemandRotationStartDate =
       Objects.nonNull(nativeValue.onDemandRotationStartDate())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.onDemandRotationStartDate()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new GetKeyRotationStatusResponse(
       keyRotationEnabled,
       keyId,
@@ -2374,50 +1949,38 @@ public class ToDafny {
     keyId =
       Objects.nonNull(nativeValue.keyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Byte>> importToken;
     importToken =
       Objects.nonNull(nativeValue.importToken())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
             nativeValue.importToken().asByteArray()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Byte>> publicKey;
     publicKey =
       Objects.nonNull(nativeValue.publicKey())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
             nativeValue.publicKey().asByteArray()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> parametersValidTo;
     parametersValidTo =
       Objects.nonNull(nativeValue.parametersValidTo())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.parametersValidTo()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new GetParametersForImportResponse(
       keyId,
       importToken,
@@ -2440,17 +2003,8 @@ public class ToDafny {
     grantTokens =
       (Objects.nonNull(nativeValue.grantTokens()) &&
           nativeValue.grantTokens().size() > 0)
-        ? Option.create_Some(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
-          ToDafny.GrantTokenList(nativeValue.grantTokens())
-        )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        ? Option.create_Some(ToDafny.GrantTokenList(nativeValue.grantTokens()))
+        : Option.create_None();
     return new GetPublicKeyRequest(keyId, grantTokens);
   }
 
@@ -2461,50 +2015,37 @@ public class ToDafny {
     keyId =
       Objects.nonNull(nativeValue.keyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Byte>> publicKey;
     publicKey =
       Objects.nonNull(nativeValue.publicKey())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
             nativeValue.publicKey().asByteArray()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE)
-        );
+        : Option.create_None();
     Option<CustomerMasterKeySpec> customerMasterKeySpec;
     customerMasterKeySpec =
       Objects.nonNull(nativeValue.customerMasterKeySpec())
         ? Option.create_Some(
-          CustomerMasterKeySpec._typeDescriptor(),
           ToDafny.CustomerMasterKeySpec(nativeValue.customerMasterKeySpec())
         )
-        : Option.create_None(CustomerMasterKeySpec._typeDescriptor());
+        : Option.create_None();
     Option<KeySpec> keySpec;
     keySpec =
       Objects.nonNull(nativeValue.keySpec())
-        ? Option.create_Some(
-          KeySpec._typeDescriptor(),
-          ToDafny.KeySpec(nativeValue.keySpec())
-        )
-        : Option.create_None(KeySpec._typeDescriptor());
+        ? Option.create_Some(ToDafny.KeySpec(nativeValue.keySpec()))
+        : Option.create_None();
     Option<KeyUsageType> keyUsage;
     keyUsage =
       Objects.nonNull(nativeValue.keyUsage())
-        ? Option.create_Some(
-          KeyUsageType._typeDescriptor(),
-          ToDafny.KeyUsageType(nativeValue.keyUsage())
-        )
-        : Option.create_None(KeyUsageType._typeDescriptor());
+        ? Option.create_Some(ToDafny.KeyUsageType(nativeValue.keyUsage()))
+        : Option.create_None();
     Option<
       DafnySequence<? extends EncryptionAlgorithmSpec>
     > encryptionAlgorithms;
@@ -2512,29 +2053,19 @@ public class ToDafny {
       (Objects.nonNull(nativeValue.encryptionAlgorithms()) &&
           nativeValue.encryptionAlgorithms().size() > 0)
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(
-            EncryptionAlgorithmSpec._typeDescriptor()
-          ),
           ToDafny.EncryptionAlgorithmSpecList(
             nativeValue.encryptionAlgorithms()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(
-            EncryptionAlgorithmSpec._typeDescriptor()
-          )
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends SigningAlgorithmSpec>> signingAlgorithms;
     signingAlgorithms =
       (Objects.nonNull(nativeValue.signingAlgorithms()) &&
           nativeValue.signingAlgorithms().size() > 0)
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(SigningAlgorithmSpec._typeDescriptor()),
           ToDafny.SigningAlgorithmSpecList(nativeValue.signingAlgorithms())
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(SigningAlgorithmSpec._typeDescriptor())
-        );
+        : Option.create_None();
     Option<
       DafnySequence<? extends KeyAgreementAlgorithmSpec>
     > keyAgreementAlgorithms;
@@ -2542,18 +2073,11 @@ public class ToDafny {
       (Objects.nonNull(nativeValue.keyAgreementAlgorithms()) &&
           nativeValue.keyAgreementAlgorithms().size() > 0)
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(
-            KeyAgreementAlgorithmSpec._typeDescriptor()
-          ),
           ToDafny.KeyAgreementAlgorithmSpecList(
             nativeValue.keyAgreementAlgorithms()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(
-            KeyAgreementAlgorithmSpec._typeDescriptor()
-          )
-        );
+        : Option.create_None();
     return new GetPublicKeyResponse(
       keyId,
       publicKey,
@@ -2579,18 +2103,9 @@ public class ToDafny {
       (Objects.nonNull(nativeValue.encryptionContextSubset()) &&
           nativeValue.encryptionContextSubset().size() > 0)
         ? Option.create_Some(
-          DafnyMap._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
           ToDafny.EncryptionContextType(nativeValue.encryptionContextSubset())
         )
-        : Option.create_None(
-          DafnyMap._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        : Option.create_None();
     Option<
       DafnyMap<
         ? extends DafnySequence<? extends Character>,
@@ -2601,18 +2116,9 @@ public class ToDafny {
       (Objects.nonNull(nativeValue.encryptionContextEquals()) &&
           nativeValue.encryptionContextEquals().size() > 0)
         ? Option.create_Some(
-          DafnyMap._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
           ToDafny.EncryptionContextType(nativeValue.encryptionContextEquals())
         )
-        : Option.create_None(
-          DafnyMap._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        : Option.create_None();
     return new GrantConstraints(
       encryptionContextSubset,
       encryptionContextEquals
@@ -2636,105 +2142,80 @@ public class ToDafny {
     keyId =
       Objects.nonNull(nativeValue.keyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> grantId;
     grantId =
       Objects.nonNull(nativeValue.grantId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.grantId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> name;
     name =
       Objects.nonNull(nativeValue.name())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.name()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> creationDate;
     creationDate =
       Objects.nonNull(nativeValue.creationDate())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.creationDate()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> granteePrincipal;
     granteePrincipal =
       Objects.nonNull(nativeValue.granteePrincipal())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.granteePrincipal()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> retiringPrincipal;
     retiringPrincipal =
       Objects.nonNull(nativeValue.retiringPrincipal())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.retiringPrincipal()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> issuingAccount;
     issuingAccount =
       Objects.nonNull(nativeValue.issuingAccount())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.issuingAccount()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends GrantOperation>> operations;
     operations =
       (Objects.nonNull(nativeValue.operations()) &&
           nativeValue.operations().size() > 0)
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(GrantOperation._typeDescriptor()),
           ToDafny.GrantOperationList(nativeValue.operations())
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(GrantOperation._typeDescriptor())
-        );
+        : Option.create_None();
     Option<GrantConstraints> constraints;
     constraints =
       Objects.nonNull(nativeValue.constraints())
         ? Option.create_Some(
-          GrantConstraints._typeDescriptor(),
           ToDafny.GrantConstraints(nativeValue.constraints())
         )
-        : Option.create_None(GrantConstraints._typeDescriptor());
+        : Option.create_None();
     return new GrantListEntry(
       keyId,
       grantId,
@@ -2790,22 +2271,18 @@ public class ToDafny {
     validTo =
       Objects.nonNull(nativeValue.validTo())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.validTo()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<ExpirationModelType> expirationModel;
     expirationModel =
       Objects.nonNull(nativeValue.expirationModel())
         ? Option.create_Some(
-          ExpirationModelType._typeDescriptor(),
           ToDafny.ExpirationModelType(nativeValue.expirationModel())
         )
-        : Option.create_None(ExpirationModelType._typeDescriptor());
+        : Option.create_None();
     return new ImportKeyMaterialRequest(
       keyId,
       importToken,
@@ -2848,26 +2331,20 @@ public class ToDafny {
     keyId =
       Objects.nonNull(nativeValue.keyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> keyArn;
     keyArn =
       Objects.nonNull(nativeValue.keyArn())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyArn()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new KeyListEntry(keyId, keyArn);
   }
 
@@ -2878,14 +2355,11 @@ public class ToDafny {
     aWSAccountId =
       Objects.nonNull(nativeValue.awsAccountId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.awsAccountId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     DafnySequence<? extends Character> keyId;
     keyId =
       software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
@@ -2895,147 +2369,109 @@ public class ToDafny {
     arn =
       Objects.nonNull(nativeValue.arn())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.arn()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> creationDate;
     creationDate =
       Objects.nonNull(nativeValue.creationDate())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.creationDate()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<Boolean> enabled;
     enabled =
       Objects.nonNull(nativeValue.enabled())
-        ? Option.create_Some(TypeDescriptor.BOOLEAN, (nativeValue.enabled()))
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.enabled()))
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> description;
     description =
       Objects.nonNull(nativeValue.description())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.description()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<KeyUsageType> keyUsage;
     keyUsage =
       Objects.nonNull(nativeValue.keyUsage())
-        ? Option.create_Some(
-          KeyUsageType._typeDescriptor(),
-          ToDafny.KeyUsageType(nativeValue.keyUsage())
-        )
-        : Option.create_None(KeyUsageType._typeDescriptor());
+        ? Option.create_Some(ToDafny.KeyUsageType(nativeValue.keyUsage()))
+        : Option.create_None();
     Option<KeyState> keyState;
     keyState =
       Objects.nonNull(nativeValue.keyState())
-        ? Option.create_Some(
-          KeyState._typeDescriptor(),
-          ToDafny.KeyState(nativeValue.keyState())
-        )
-        : Option.create_None(KeyState._typeDescriptor());
+        ? Option.create_Some(ToDafny.KeyState(nativeValue.keyState()))
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> deletionDate;
     deletionDate =
       Objects.nonNull(nativeValue.deletionDate())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.deletionDate()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> validTo;
     validTo =
       Objects.nonNull(nativeValue.validTo())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.validTo()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<OriginType> origin;
     origin =
       Objects.nonNull(nativeValue.origin())
-        ? Option.create_Some(
-          OriginType._typeDescriptor(),
-          ToDafny.OriginType(nativeValue.origin())
-        )
-        : Option.create_None(OriginType._typeDescriptor());
+        ? Option.create_Some(ToDafny.OriginType(nativeValue.origin()))
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> customKeyStoreId;
     customKeyStoreId =
       Objects.nonNull(nativeValue.customKeyStoreId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.customKeyStoreId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> cloudHsmClusterId;
     cloudHsmClusterId =
       Objects.nonNull(nativeValue.cloudHsmClusterId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.cloudHsmClusterId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<ExpirationModelType> expirationModel;
     expirationModel =
       Objects.nonNull(nativeValue.expirationModel())
         ? Option.create_Some(
-          ExpirationModelType._typeDescriptor(),
           ToDafny.ExpirationModelType(nativeValue.expirationModel())
         )
-        : Option.create_None(ExpirationModelType._typeDescriptor());
+        : Option.create_None();
     Option<KeyManagerType> keyManager;
     keyManager =
       Objects.nonNull(nativeValue.keyManager())
-        ? Option.create_Some(
-          KeyManagerType._typeDescriptor(),
-          ToDafny.KeyManagerType(nativeValue.keyManager())
-        )
-        : Option.create_None(KeyManagerType._typeDescriptor());
+        ? Option.create_Some(ToDafny.KeyManagerType(nativeValue.keyManager()))
+        : Option.create_None();
     Option<CustomerMasterKeySpec> customerMasterKeySpec;
     customerMasterKeySpec =
       Objects.nonNull(nativeValue.customerMasterKeySpec())
         ? Option.create_Some(
-          CustomerMasterKeySpec._typeDescriptor(),
           ToDafny.CustomerMasterKeySpec(nativeValue.customerMasterKeySpec())
         )
-        : Option.create_None(CustomerMasterKeySpec._typeDescriptor());
+        : Option.create_None();
     Option<KeySpec> keySpec;
     keySpec =
       Objects.nonNull(nativeValue.keySpec())
-        ? Option.create_Some(
-          KeySpec._typeDescriptor(),
-          ToDafny.KeySpec(nativeValue.keySpec())
-        )
-        : Option.create_None(KeySpec._typeDescriptor());
+        ? Option.create_Some(ToDafny.KeySpec(nativeValue.keySpec()))
+        : Option.create_None();
     Option<
       DafnySequence<? extends EncryptionAlgorithmSpec>
     > encryptionAlgorithms;
@@ -3043,29 +2479,19 @@ public class ToDafny {
       (Objects.nonNull(nativeValue.encryptionAlgorithms()) &&
           nativeValue.encryptionAlgorithms().size() > 0)
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(
-            EncryptionAlgorithmSpec._typeDescriptor()
-          ),
           ToDafny.EncryptionAlgorithmSpecList(
             nativeValue.encryptionAlgorithms()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(
-            EncryptionAlgorithmSpec._typeDescriptor()
-          )
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends SigningAlgorithmSpec>> signingAlgorithms;
     signingAlgorithms =
       (Objects.nonNull(nativeValue.signingAlgorithms()) &&
           nativeValue.signingAlgorithms().size() > 0)
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(SigningAlgorithmSpec._typeDescriptor()),
           ToDafny.SigningAlgorithmSpecList(nativeValue.signingAlgorithms())
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(SigningAlgorithmSpec._typeDescriptor())
-        );
+        : Option.create_None();
     Option<
       DafnySequence<? extends KeyAgreementAlgorithmSpec>
     > keyAgreementAlgorithms;
@@ -3073,63 +2499,45 @@ public class ToDafny {
       (Objects.nonNull(nativeValue.keyAgreementAlgorithms()) &&
           nativeValue.keyAgreementAlgorithms().size() > 0)
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(
-            KeyAgreementAlgorithmSpec._typeDescriptor()
-          ),
           ToDafny.KeyAgreementAlgorithmSpecList(
             nativeValue.keyAgreementAlgorithms()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(
-            KeyAgreementAlgorithmSpec._typeDescriptor()
-          )
-        );
+        : Option.create_None();
     Option<Boolean> multiRegion;
     multiRegion =
       Objects.nonNull(nativeValue.multiRegion())
-        ? Option.create_Some(
-          TypeDescriptor.BOOLEAN,
-          (nativeValue.multiRegion())
-        )
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.multiRegion()))
+        : Option.create_None();
     Option<MultiRegionConfiguration> multiRegionConfiguration;
     multiRegionConfiguration =
       Objects.nonNull(nativeValue.multiRegionConfiguration())
         ? Option.create_Some(
-          MultiRegionConfiguration._typeDescriptor(),
           ToDafny.MultiRegionConfiguration(
             nativeValue.multiRegionConfiguration()
           )
         )
-        : Option.create_None(MultiRegionConfiguration._typeDescriptor());
+        : Option.create_None();
     Option<Integer> pendingDeletionWindowInDays;
     pendingDeletionWindowInDays =
       Objects.nonNull(nativeValue.pendingDeletionWindowInDays())
-        ? Option.create_Some(
-          TypeDescriptor.INT,
-          (nativeValue.pendingDeletionWindowInDays())
-        )
-        : Option.create_None(TypeDescriptor.INT);
+        ? Option.create_Some((nativeValue.pendingDeletionWindowInDays()))
+        : Option.create_None();
     Option<DafnySequence<? extends MacAlgorithmSpec>> macAlgorithms;
     macAlgorithms =
       (Objects.nonNull(nativeValue.macAlgorithms()) &&
           nativeValue.macAlgorithms().size() > 0)
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(MacAlgorithmSpec._typeDescriptor()),
           ToDafny.MacAlgorithmSpecList(nativeValue.macAlgorithms())
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(MacAlgorithmSpec._typeDescriptor())
-        );
+        : Option.create_None();
     Option<XksKeyConfigurationType> xksKeyConfiguration;
     xksKeyConfiguration =
       Objects.nonNull(nativeValue.xksKeyConfiguration())
         ? Option.create_Some(
-          XksKeyConfigurationType._typeDescriptor(),
           ToDafny.XksKeyConfigurationType(nativeValue.xksKeyConfiguration())
         )
-        : Option.create_None(XksKeyConfigurationType._typeDescriptor());
+        : Option.create_None();
     return new KeyMetadata(
       aWSAccountId,
       keyId,
@@ -3166,31 +2574,25 @@ public class ToDafny {
     keyId =
       Objects.nonNull(nativeValue.keyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<Integer> limit;
     limit =
       Objects.nonNull(nativeValue.limit())
-        ? Option.create_Some(TypeDescriptor.INT, (nativeValue.limit()))
-        : Option.create_None(TypeDescriptor.INT);
+        ? Option.create_Some((nativeValue.limit()))
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> marker;
     marker =
       Objects.nonNull(nativeValue.marker())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.marker()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new ListAliasesRequest(keyId, limit, marker);
   }
 
@@ -3201,30 +2603,22 @@ public class ToDafny {
     aliases =
       (Objects.nonNull(nativeValue.aliases()) &&
           nativeValue.aliases().size() > 0)
-        ? Option.create_Some(
-          DafnySequence._typeDescriptor(AliasListEntry._typeDescriptor()),
-          ToDafny.AliasList(nativeValue.aliases())
-        )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(AliasListEntry._typeDescriptor())
-        );
+        ? Option.create_Some(ToDafny.AliasList(nativeValue.aliases()))
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> nextMarker;
     nextMarker =
       Objects.nonNull(nativeValue.nextMarker())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.nextMarker()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<Boolean> truncated;
     truncated =
       Objects.nonNull(nativeValue.truncated())
-        ? Option.create_Some(TypeDescriptor.BOOLEAN, (nativeValue.truncated()))
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.truncated()))
+        : Option.create_None();
     return new ListAliasesResponse(aliases, nextMarker, truncated);
   }
 
@@ -3234,20 +2628,17 @@ public class ToDafny {
     Option<Integer> limit;
     limit =
       Objects.nonNull(nativeValue.limit())
-        ? Option.create_Some(TypeDescriptor.INT, (nativeValue.limit()))
-        : Option.create_None(TypeDescriptor.INT);
+        ? Option.create_Some((nativeValue.limit()))
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> marker;
     marker =
       Objects.nonNull(nativeValue.marker())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.marker()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     DafnySequence<? extends Character> keyId;
     keyId =
       software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
@@ -3257,26 +2648,20 @@ public class ToDafny {
     grantId =
       Objects.nonNull(nativeValue.grantId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.grantId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> granteePrincipal;
     granteePrincipal =
       Objects.nonNull(nativeValue.granteePrincipal())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.granteePrincipal()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new ListGrantsRequest(
       limit,
       marker,
@@ -3292,30 +2677,22 @@ public class ToDafny {
     Option<DafnySequence<? extends GrantListEntry>> grants;
     grants =
       (Objects.nonNull(nativeValue.grants()) && nativeValue.grants().size() > 0)
-        ? Option.create_Some(
-          DafnySequence._typeDescriptor(GrantListEntry._typeDescriptor()),
-          ToDafny.GrantList(nativeValue.grants())
-        )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(GrantListEntry._typeDescriptor())
-        );
+        ? Option.create_Some(ToDafny.GrantList(nativeValue.grants()))
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> nextMarker;
     nextMarker =
       Objects.nonNull(nativeValue.nextMarker())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.nextMarker()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<Boolean> truncated;
     truncated =
       Objects.nonNull(nativeValue.truncated())
-        ? Option.create_Some(TypeDescriptor.BOOLEAN, (nativeValue.truncated()))
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.truncated()))
+        : Option.create_None();
     return new ListGrantsResponse(grants, nextMarker, truncated);
   }
 
@@ -3330,20 +2707,17 @@ public class ToDafny {
     Option<Integer> limit;
     limit =
       Objects.nonNull(nativeValue.limit())
-        ? Option.create_Some(TypeDescriptor.INT, (nativeValue.limit()))
-        : Option.create_None(TypeDescriptor.INT);
+        ? Option.create_Some((nativeValue.limit()))
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> marker;
     marker =
       Objects.nonNull(nativeValue.marker())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.marker()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new ListKeyPoliciesRequest(keyId, limit, marker);
   }
 
@@ -3356,34 +2730,22 @@ public class ToDafny {
     policyNames =
       (Objects.nonNull(nativeValue.policyNames()) &&
           nativeValue.policyNames().size() > 0)
-        ? Option.create_Some(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
-          ToDafny.PolicyNameList(nativeValue.policyNames())
-        )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        ? Option.create_Some(ToDafny.PolicyNameList(nativeValue.policyNames()))
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> nextMarker;
     nextMarker =
       Objects.nonNull(nativeValue.nextMarker())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.nextMarker()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<Boolean> truncated;
     truncated =
       Objects.nonNull(nativeValue.truncated())
-        ? Option.create_Some(TypeDescriptor.BOOLEAN, (nativeValue.truncated()))
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.truncated()))
+        : Option.create_None();
     return new ListKeyPoliciesResponse(policyNames, nextMarker, truncated);
   }
 
@@ -3398,20 +2760,17 @@ public class ToDafny {
     Option<Integer> limit;
     limit =
       Objects.nonNull(nativeValue.limit())
-        ? Option.create_Some(TypeDescriptor.INT, (nativeValue.limit()))
-        : Option.create_None(TypeDescriptor.INT);
+        ? Option.create_Some((nativeValue.limit()))
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> marker;
     marker =
       Objects.nonNull(nativeValue.marker())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.marker()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new ListKeyRotationsRequest(keyId, limit, marker);
   }
 
@@ -3422,30 +2781,22 @@ public class ToDafny {
     rotations =
       (Objects.nonNull(nativeValue.rotations()) &&
           nativeValue.rotations().size() > 0)
-        ? Option.create_Some(
-          DafnySequence._typeDescriptor(RotationsListEntry._typeDescriptor()),
-          ToDafny.RotationsList(nativeValue.rotations())
-        )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(RotationsListEntry._typeDescriptor())
-        );
+        ? Option.create_Some(ToDafny.RotationsList(nativeValue.rotations()))
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> nextMarker;
     nextMarker =
       Objects.nonNull(nativeValue.nextMarker())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.nextMarker()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<Boolean> truncated;
     truncated =
       Objects.nonNull(nativeValue.truncated())
-        ? Option.create_Some(TypeDescriptor.BOOLEAN, (nativeValue.truncated()))
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.truncated()))
+        : Option.create_None();
     return new ListKeyRotationsResponse(rotations, nextMarker, truncated);
   }
 
@@ -3455,20 +2806,17 @@ public class ToDafny {
     Option<Integer> limit;
     limit =
       Objects.nonNull(nativeValue.limit())
-        ? Option.create_Some(TypeDescriptor.INT, (nativeValue.limit()))
-        : Option.create_None(TypeDescriptor.INT);
+        ? Option.create_Some((nativeValue.limit()))
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> marker;
     marker =
       Objects.nonNull(nativeValue.marker())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.marker()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new ListKeysRequest(limit, marker);
   }
 
@@ -3478,30 +2826,22 @@ public class ToDafny {
     Option<DafnySequence<? extends KeyListEntry>> keys;
     keys =
       (Objects.nonNull(nativeValue.keys()) && nativeValue.keys().size() > 0)
-        ? Option.create_Some(
-          DafnySequence._typeDescriptor(KeyListEntry._typeDescriptor()),
-          ToDafny.KeyList(nativeValue.keys())
-        )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(KeyListEntry._typeDescriptor())
-        );
+        ? Option.create_Some(ToDafny.KeyList(nativeValue.keys()))
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> nextMarker;
     nextMarker =
       Objects.nonNull(nativeValue.nextMarker())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.nextMarker()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<Boolean> truncated;
     truncated =
       Objects.nonNull(nativeValue.truncated())
-        ? Option.create_Some(TypeDescriptor.BOOLEAN, (nativeValue.truncated()))
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.truncated()))
+        : Option.create_None();
     return new ListKeysResponse(keys, nextMarker, truncated);
   }
 
@@ -3516,20 +2856,17 @@ public class ToDafny {
     Option<Integer> limit;
     limit =
       Objects.nonNull(nativeValue.limit())
-        ? Option.create_Some(TypeDescriptor.INT, (nativeValue.limit()))
-        : Option.create_None(TypeDescriptor.INT);
+        ? Option.create_Some((nativeValue.limit()))
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> marker;
     marker =
       Objects.nonNull(nativeValue.marker())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.marker()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new ListResourceTagsRequest(keyId, limit, marker);
   }
 
@@ -3539,31 +2876,23 @@ public class ToDafny {
     Option<DafnySequence<? extends Tag>> tags;
     tags =
       (Objects.nonNull(nativeValue.tags()) && nativeValue.tags().size() > 0)
-        ? Option.create_Some(
-          DafnySequence._typeDescriptor(Tag._typeDescriptor()),
-          ToDafny.TagList(nativeValue.tags())
-        )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(Tag._typeDescriptor())
-        );
+        ? Option.create_Some(ToDafny.TagList(nativeValue.tags()))
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> nextMarker;
     nextMarker =
       Objects.nonNull(nativeValue.nextMarker())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.nextMarker()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<Boolean> truncated;
     truncated =
       Objects.nonNull(nativeValue.truncated())
-        ? Option.create_Some(TypeDescriptor.BOOLEAN, (nativeValue.truncated()))
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.truncated()))
+        : Option.create_None();
     return new ListResourceTagsResponse(tags, nextMarker, truncated);
   }
 
   public static DafnySequence<? extends MacAlgorithmSpec> MacAlgorithmSpecList(
@@ -3583,29 +2914,22 @@ public class ToDafny {
     multiRegionKeyType =
       Objects.nonNull(nativeValue.multiRegionKeyType())
         ? Option.create_Some(
-          MultiRegionKeyType._typeDescriptor(),
           ToDafny.MultiRegionKeyType(nativeValue.multiRegionKeyType())
         )
-        : Option.create_None(MultiRegionKeyType._typeDescriptor());
+        : Option.create_None();
     Option<MultiRegionKey> primaryKey;
     primaryKey =
       Objects.nonNull(nativeValue.primaryKey())
-        ? Option.create_Some(
-          MultiRegionKey._typeDescriptor(),
-          ToDafny.MultiRegionKey(nativeValue.primaryKey())
-        )
-        : Option.create_None(MultiRegionKey._typeDescriptor());
+        ? Option.create_Some(ToDafny.MultiRegionKey(nativeValue.primaryKey()))
+        : Option.create_None();
     Option<DafnySequence<? extends MultiRegionKey>> replicaKeys;
     replicaKeys =
       (Objects.nonNull(nativeValue.replicaKeys()) &&
           nativeValue.replicaKeys().size() > 0)
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(MultiRegionKey._typeDescriptor()),
           ToDafny.MultiRegionKeyList(nativeValue.replicaKeys())
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(MultiRegionKey._typeDescriptor())
-        );
+        : Option.create_None();
     return new MultiRegionConfiguration(
       multiRegionKeyType,
       primaryKey,
@@ -3620,26 +2944,20 @@ public class ToDafny {
     arn =
       Objects.nonNull(nativeValue.arn())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.arn()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> region;
     region =
       Objects.nonNull(nativeValue.region())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.region()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new MultiRegionKey(arn, region);
   }
 
@@ -3675,14 +2993,11 @@ public class ToDafny {
     policyName =
       Objects.nonNull(nativeValue.policyName())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.policyName()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     DafnySequence<? extends Character> policy;
     policy =
       software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
@@ -3691,11 +3006,8 @@ public class ToDafny {
     Option<Boolean> bypassPolicyLockoutSafetyCheck;
     bypassPolicyLockoutSafetyCheck =
       Objects.nonNull(nativeValue.bypassPolicyLockoutSafetyCheck())
-        ? Option.create_Some(
-          TypeDescriptor.BOOLEAN,
-          (nativeValue.bypassPolicyLockoutSafetyCheck())
-        )
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.bypassPolicyLockoutSafetyCheck()))
+        : Option.create_None();
     return new PutKeyPolicyRequest(
       keyId,
       policyName,
@@ -3711,22 +3023,18 @@ public class ToDafny {
     keyEncryptionAlgorithm =
       Objects.nonNull(nativeValue.keyEncryptionAlgorithm())
         ? Option.create_Some(
-          KeyEncryptionMechanism._typeDescriptor(),
           ToDafny.KeyEncryptionMechanism(nativeValue.keyEncryptionAlgorithm())
         )
-        : Option.create_None(KeyEncryptionMechanism._typeDescriptor());
+        : Option.create_None();
     Option<DafnySequence<? extends Byte>> attestationDocument;
     attestationDocument =
       Objects.nonNull(nativeValue.attestationDocument())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
             nativeValue.attestationDocument().asByteArray()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE)
-        );
+        : Option.create_None();
     return new RecipientInfo(keyEncryptionAlgorithm, attestationDocument);
   }
 
@@ -3748,30 +3056,18 @@ public class ToDafny {
       (Objects.nonNull(nativeValue.sourceEncryptionContext()) &&
           nativeValue.sourceEncryptionContext().size() > 0)
         ? Option.create_Some(
-          DafnyMap._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
           ToDafny.EncryptionContextType(nativeValue.sourceEncryptionContext())
         )
-        : Option.create_None(
-          DafnyMap._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> sourceKeyId;
     sourceKeyId =
       Objects.nonNull(nativeValue.sourceKeyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.sourceKeyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     DafnySequence<? extends Character> destinationKeyId;
     destinationKeyId =
       software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
@@ -3787,62 +3083,42 @@ public class ToDafny {
       (Objects.nonNull(nativeValue.destinationEncryptionContext()) &&
           nativeValue.destinationEncryptionContext().size() > 0)
         ? Option.create_Some(
-          DafnyMap._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
           ToDafny.EncryptionContextType(
             nativeValue.destinationEncryptionContext()
           )
         )
-        : Option.create_None(
-          DafnyMap._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        : Option.create_None();
     Option<EncryptionAlgorithmSpec> sourceEncryptionAlgorithm;
     sourceEncryptionAlgorithm =
       Objects.nonNull(nativeValue.sourceEncryptionAlgorithm())
         ? Option.create_Some(
-          EncryptionAlgorithmSpec._typeDescriptor(),
           ToDafny.EncryptionAlgorithmSpec(
             nativeValue.sourceEncryptionAlgorithm()
           )
         )
-        : Option.create_None(EncryptionAlgorithmSpec._typeDescriptor());
+        : Option.create_None();
     Option<EncryptionAlgorithmSpec> destinationEncryptionAlgorithm;
     destinationEncryptionAlgorithm =
       Objects.nonNull(nativeValue.destinationEncryptionAlgorithm())
         ? Option.create_Some(
-          EncryptionAlgorithmSpec._typeDescriptor(),
           ToDafny.EncryptionAlgorithmSpec(
             nativeValue.destinationEncryptionAlgorithm()
           )
         )
-        : Option.create_None(EncryptionAlgorithmSpec._typeDescriptor());
+        : Option.create_None();
     Option<
       DafnySequence<? extends DafnySequence<? extends Character>>
     > grantTokens;
     grantTokens =
       (Objects.nonNull(nativeValue.grantTokens()) &&
           nativeValue.grantTokens().size() > 0)
-        ? Option.create_Some(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
-          ToDafny.GrantTokenList(nativeValue.grantTokens())
-        )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        ? Option.create_Some(ToDafny.GrantTokenList(nativeValue.grantTokens()))
+        : Option.create_None();
     Option<Boolean> dryRun;
     dryRun =
       Objects.nonNull(nativeValue.dryRun())
-        ? Option.create_Some(TypeDescriptor.BOOLEAN, (nativeValue.dryRun()))
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.dryRun()))
+        : Option.create_None();
     return new ReEncryptRequest(
       ciphertextBlob,
       sourceEncryptionContext,
@@ -3863,58 +3139,47 @@ public class ToDafny {
     ciphertextBlob =
       Objects.nonNull(nativeValue.ciphertextBlob())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
             nativeValue.ciphertextBlob().asByteArray()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> sourceKeyId;
     sourceKeyId =
       Objects.nonNull(nativeValue.sourceKeyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.sourceKeyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> keyId;
     keyId =
       Objects.nonNull(nativeValue.keyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<EncryptionAlgorithmSpec> sourceEncryptionAlgorithm;
     sourceEncryptionAlgorithm =
       Objects.nonNull(nativeValue.sourceEncryptionAlgorithm())
         ? Option.create_Some(
-          EncryptionAlgorithmSpec._typeDescriptor(),
           ToDafny.EncryptionAlgorithmSpec(
             nativeValue.sourceEncryptionAlgorithm()
           )
         )
-        : Option.create_None(EncryptionAlgorithmSpec._typeDescriptor());
+        : Option.create_None();
     Option<EncryptionAlgorithmSpec> destinationEncryptionAlgorithm;
     destinationEncryptionAlgorithm =
       Objects.nonNull(nativeValue.destinationEncryptionAlgorithm())
         ? Option.create_Some(
-          EncryptionAlgorithmSpec._typeDescriptor(),
           ToDafny.EncryptionAlgorithmSpec(
             nativeValue.destinationEncryptionAlgorithm()
           )
         )
-        : Option.create_None(EncryptionAlgorithmSpec._typeDescriptor());
+        : Option.create_None();
     return new ReEncryptResponse(
       ciphertextBlob,
       sourceKeyId,
@@ -3941,44 +3206,30 @@ public class ToDafny {
     policy =
       Objects.nonNull(nativeValue.policy())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.policy()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<Boolean> bypassPolicyLockoutSafetyCheck;
     bypassPolicyLockoutSafetyCheck =
       Objects.nonNull(nativeValue.bypassPolicyLockoutSafetyCheck())
-        ? Option.create_Some(
-          TypeDescriptor.BOOLEAN,
-          (nativeValue.bypassPolicyLockoutSafetyCheck())
-        )
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.bypassPolicyLockoutSafetyCheck()))
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> description;
     description =
       Objects.nonNull(nativeValue.description())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.description()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Tag>> tags;
     tags =
       (Objects.nonNull(nativeValue.tags()) && nativeValue.tags().size() > 0)
-        ? Option.create_Some(
-          DafnySequence._typeDescriptor(Tag._typeDescriptor()),
-          ToDafny.TagList(nativeValue.tags())
-        )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(Tag._typeDescriptor())
-        );
+        ? Option.create_Some(ToDafny.TagList(nativeValue.tags()))
+        : Option.create_None();
     return new ReplicateKeyRequest(
       keyId,
       replicaRegion,
@@ -3996,33 +3247,24 @@ public class ToDafny {
     replicaKeyMetadata =
       Objects.nonNull(nativeValue.replicaKeyMetadata())
         ? Option.create_Some(
-          KeyMetadata._typeDescriptor(),
           ToDafny.KeyMetadata(nativeValue.replicaKeyMetadata())
         )
-        : Option.create_None(KeyMetadata._typeDescriptor());
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> replicaPolicy;
     replicaPolicy =
       Objects.nonNull(nativeValue.replicaPolicy())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.replicaPolicy()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Tag>> replicaTags;
     replicaTags =
       (Objects.nonNull(nativeValue.replicaTags()) &&
           nativeValue.replicaTags().size() > 0)
-        ? Option.create_Some(
-          DafnySequence._typeDescriptor(Tag._typeDescriptor()),
-          ToDafny.TagList(nativeValue.replicaTags())
-        )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(Tag._typeDescriptor())
-        );
+        ? Option.create_Some(ToDafny.TagList(nativeValue.replicaTags()))
+        : Option.create_None();
     return new ReplicateKeyResponse(
       replicaKeyMetadata,
       replicaPolicy,
@@ -4037,43 +3279,34 @@ public class ToDafny {
     grantToken =
       Objects.nonNull(nativeValue.grantToken())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.grantToken()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> keyId;
     keyId =
       Objects.nonNull(nativeValue.keyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> grantId;
     grantId =
       Objects.nonNull(nativeValue.grantId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.grantId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<Boolean> dryRun;
     dryRun =
       Objects.nonNull(nativeValue.dryRun())
-        ? Option.create_Some(TypeDescriptor.BOOLEAN, (nativeValue.dryRun()))
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.dryRun()))
+        : Option.create_None();
     return new RetireGrantRequest(grantToken, keyId, grantId, dryRun);
   }
 
@@ -4093,8 +3326,8 @@ public class ToDafny {
     Option<Boolean> dryRun;
     dryRun =
       Objects.nonNull(nativeValue.dryRun())
-        ? Option.create_Some(TypeDescriptor.BOOLEAN, (nativeValue.dryRun()))
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.dryRun()))
+        : Option.create_None();
     return new RevokeGrantRequest(keyId, grantId, dryRun);
   }
 
@@ -4116,14 +3349,11 @@ public class ToDafny {
     keyId =
       Objects.nonNull(nativeValue.keyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new RotateKeyOnDemandResponse(keyId);
   }
 
@@ -4146,34 +3376,25 @@ public class ToDafny {
     keyId =
       Objects.nonNull(nativeValue.keyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> rotationDate;
     rotationDate =
       Objects.nonNull(nativeValue.rotationDate())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.rotationDate()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<RotationType> rotationType;
     rotationType =
       Objects.nonNull(nativeValue.rotationType())
-        ? Option.create_Some(
-          RotationType._typeDescriptor(),
-          ToDafny.RotationType(nativeValue.rotationType())
-        )
-        : Option.create_None(RotationType._typeDescriptor());
+        ? Option.create_Some(ToDafny.RotationType(nativeValue.rotationType()))
+        : Option.create_None();
     return new RotationsListEntry(keyId, rotationDate, rotationType);
   }
 
@@ -4188,11 +3409,8 @@ public class ToDafny {
     Option<Integer> pendingWindowInDays;
     pendingWindowInDays =
       Objects.nonNull(nativeValue.pendingWindowInDays())
-        ? Option.create_Some(
-          TypeDescriptor.INT,
-          (nativeValue.pendingWindowInDays())
-        )
-        : Option.create_None(TypeDescriptor.INT);
+        ? Option.create_Some((nativeValue.pendingWindowInDays()))
+        : Option.create_None();
     return new ScheduleKeyDeletionRequest(keyId, pendingWindowInDays);
   }
 
@@ -4203,42 +3421,30 @@ public class ToDafny {
     keyId =
       Objects.nonNull(nativeValue.keyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> deletionDate;
     deletionDate =
       Objects.nonNull(nativeValue.deletionDate())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.deletionDate()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<KeyState> keyState;
     keyState =
       Objects.nonNull(nativeValue.keyState())
-        ? Option.create_Some(
-          KeyState._typeDescriptor(),
-          ToDafny.KeyState(nativeValue.keyState())
-        )
-        : Option.create_None(KeyState._typeDescriptor());
+        ? Option.create_Some(ToDafny.KeyState(nativeValue.keyState()))
+        : Option.create_None();
     Option<Integer> pendingWindowInDays;
     pendingWindowInDays =
       Objects.nonNull(nativeValue.pendingWindowInDays())
-        ? Option.create_Some(
-          TypeDescriptor.INT,
-          (nativeValue.pendingWindowInDays())
-        )
-        : Option.create_None(TypeDescriptor.INT);
+        ? Option.create_Some((nativeValue.pendingWindowInDays()))
+        : Option.create_None();
     return new ScheduleKeyDeletionResponse(
       keyId,
       deletionDate,
@@ -4277,36 +3483,24 @@ public class ToDafny {
     Option<MessageType> messageType;
     messageType =
       Objects.nonNull(nativeValue.messageType())
-        ? Option.create_Some(
-          MessageType._typeDescriptor(),
-          ToDafny.MessageType(nativeValue.messageType())
-        )
-        : Option.create_None(MessageType._typeDescriptor());
+        ? Option.create_Some(ToDafny.MessageType(nativeValue.messageType()))
+        : Option.create_None();
     Option<
       DafnySequence<? extends DafnySequence<? extends Character>>
     > grantTokens;
     grantTokens =
       (Objects.nonNull(nativeValue.grantTokens()) &&
           nativeValue.grantTokens().size() > 0)
-        ? Option.create_Some(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
-          ToDafny.GrantTokenList(nativeValue.grantTokens())
-        )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        ? Option.create_Some(ToDafny.GrantTokenList(nativeValue.grantTokens()))
+        : Option.create_None();
     SigningAlgorithmSpec signingAlgorithm;
     signingAlgorithm =
       ToDafny.SigningAlgorithmSpec(nativeValue.signingAlgorithm());
     Option<Boolean> dryRun;
     dryRun =
       Objects.nonNull(nativeValue.dryRun())
-        ? Option.create_Some(TypeDescriptor.BOOLEAN, (nativeValue.dryRun()))
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.dryRun()))
+        : Option.create_None();
     return new SignRequest(
       keyId,
       message,
@@ -4324,34 +3518,27 @@ public class ToDafny {
     keyId =
       Objects.nonNull(nativeValue.keyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Byte>> signature;
     signature =
       Objects.nonNull(nativeValue.signature())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
             nativeValue.signature().asByteArray()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.BYTE)
-        );
+        : Option.create_None();
     Option<SigningAlgorithmSpec> signingAlgorithm;
     signingAlgorithm =
       Objects.nonNull(nativeValue.signingAlgorithm())
         ? Option.create_Some(
-          SigningAlgorithmSpec._typeDescriptor(),
           ToDafny.SigningAlgorithmSpec(nativeValue.signingAlgorithm())
         )
-        : Option.create_None(SigningAlgorithmSpec._typeDescriptor());
+        : Option.create_None();
     return new SignResponse(keyId, signature, signingAlgorithm);
   }
 
@@ -4445,96 +3632,74 @@ public class ToDafny {
     newCustomKeyStoreName =
       Objects.nonNull(nativeValue.newCustomKeyStoreName())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.newCustomKeyStoreName()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> keyStorePassword;
     keyStorePassword =
       Objects.nonNull(nativeValue.keyStorePassword())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyStorePassword()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> cloudHsmClusterId;
     cloudHsmClusterId =
       Objects.nonNull(nativeValue.cloudHsmClusterId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.cloudHsmClusterId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> xksProxyUriEndpoint;
     xksProxyUriEndpoint =
       Objects.nonNull(nativeValue.xksProxyUriEndpoint())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.xksProxyUriEndpoint()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> xksProxyUriPath;
     xksProxyUriPath =
       Objects.nonNull(nativeValue.xksProxyUriPath())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.xksProxyUriPath()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> xksProxyVpcEndpointServiceName;
     xksProxyVpcEndpointServiceName =
       Objects.nonNull(nativeValue.xksProxyVpcEndpointServiceName())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.xksProxyVpcEndpointServiceName()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<
       XksProxyAuthenticationCredentialType
     > xksProxyAuthenticationCredential;
     xksProxyAuthenticationCredential =
       Objects.nonNull(nativeValue.xksProxyAuthenticationCredential())
         ? Option.create_Some(
-          XksProxyAuthenticationCredentialType._typeDescriptor(),
           ToDafny.XksProxyAuthenticationCredentialType(
             nativeValue.xksProxyAuthenticationCredential()
           )
         )
-        : Option.create_None(
-          XksProxyAuthenticationCredentialType._typeDescriptor()
-        );
+        : Option.create_None();
     Option<XksProxyConnectivityType> xksProxyConnectivity;
     xksProxyConnectivity =
       Objects.nonNull(nativeValue.xksProxyConnectivity())
         ? Option.create_Some(
-          XksProxyConnectivityType._typeDescriptor(),
           ToDafny.XksProxyConnectivityType(nativeValue.xksProxyConnectivity())
         )
-        : Option.create_None(XksProxyConnectivityType._typeDescriptor());
+        : Option.create_None();
     return new UpdateCustomKeyStoreRequest(
       customKeyStoreId,
       newCustomKeyStoreName,
@@ -4612,22 +3777,13 @@ public class ToDafny {
     grantTokens =
       (Objects.nonNull(nativeValue.grantTokens()) &&
           nativeValue.grantTokens().size() > 0)
-        ? Option.create_Some(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
-          ToDafny.GrantTokenList(nativeValue.grantTokens())
-        )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        ? Option.create_Some(ToDafny.GrantTokenList(nativeValue.grantTokens()))
+        : Option.create_None();
     Option<Boolean> dryRun;
     dryRun =
       Objects.nonNull(nativeValue.dryRun())
-        ? Option.create_Some(TypeDescriptor.BOOLEAN, (nativeValue.dryRun()))
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.dryRun()))
+        : Option.create_None();
     return new VerifyMacRequest(
       message,
       keyId,
@@ -4645,27 +3801,23 @@ public class ToDafny {
     keyId =
       Objects.nonNull(nativeValue.keyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<Boolean> macValid;
     macValid =
       Objects.nonNull(nativeValue.macValid())
-        ? Option.create_Some(TypeDescriptor.BOOLEAN, (nativeValue.macValid()))
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.macValid()))
+        : Option.create_None();
     Option<MacAlgorithmSpec> macAlgorithm;
     macAlgorithm =
       Objects.nonNull(nativeValue.macAlgorithm())
         ? Option.create_Some(
-          MacAlgorithmSpec._typeDescriptor(),
           ToDafny.MacAlgorithmSpec(nativeValue.macAlgorithm())
         )
-        : Option.create_None(MacAlgorithmSpec._typeDescriptor());
+        : Option.create_None();
     return new VerifyMacResponse(keyId, macValid, macAlgorithm);
   }
 
@@ -4685,11 +3837,8 @@ public class ToDafny {
     Option<MessageType> messageType;
     messageType =
       Objects.nonNull(nativeValue.messageType())
-        ? Option.create_Some(
-          MessageType._typeDescriptor(),
-          ToDafny.MessageType(nativeValue.messageType())
-        )
-        : Option.create_None(MessageType._typeDescriptor());
+        ? Option.create_Some(ToDafny.MessageType(nativeValue.messageType()))
+        : Option.create_None();
     DafnySequence<? extends Byte> signature;
     signature =
       software.amazon.smithy.dafny.conversion.ToDafny.Simple.ByteSequence(
@@ -4704,22 +3853,13 @@ public class ToDafny {
     grantTokens =
       (Objects.nonNull(nativeValue.grantTokens()) &&
           nativeValue.grantTokens().size() > 0)
-        ? Option.create_Some(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          ),
-          ToDafny.GrantTokenList(nativeValue.grantTokens())
-        )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(
-            DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-          )
-        );
+        ? Option.create_Some(ToDafny.GrantTokenList(nativeValue.grantTokens()))
+        : Option.create_None();
     Option<Boolean> dryRun;
     dryRun =
       Objects.nonNull(nativeValue.dryRun())
-        ? Option.create_Some(TypeDescriptor.BOOLEAN, (nativeValue.dryRun()))
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.dryRun()))
+        : Option.create_None();
     return new VerifyRequest(
       keyId,
       message,
@@ -4738,30 +3878,23 @@ public class ToDafny {
     keyId =
       Objects.nonNull(nativeValue.keyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.keyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<Boolean> signatureValid;
     signatureValid =
       Objects.nonNull(nativeValue.signatureValid())
-        ? Option.create_Some(
-          TypeDescriptor.BOOLEAN,
-          (nativeValue.signatureValid())
-        )
-        : Option.create_None(TypeDescriptor.BOOLEAN);
+        ? Option.create_Some((nativeValue.signatureValid()))
+        : Option.create_None();
     Option<SigningAlgorithmSpec> signingAlgorithm;
     signingAlgorithm =
       Objects.nonNull(nativeValue.signingAlgorithm())
         ? Option.create_Some(
-          SigningAlgorithmSpec._typeDescriptor(),
           ToDafny.SigningAlgorithmSpec(nativeValue.signingAlgorithm())
         )
-        : Option.create_None(SigningAlgorithmSpec._typeDescriptor());
+        : Option.create_None();
     return new VerifyResponse(keyId, signatureValid, signingAlgorithm);
   }
 
@@ -4772,14 +3905,11 @@ public class ToDafny {
     id =
       Objects.nonNull(nativeValue.id())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.id()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new XksKeyConfigurationType(id);
   }
 
@@ -4809,58 +3939,45 @@ public class ToDafny {
     connectivity =
       Objects.nonNull(nativeValue.connectivity())
         ? Option.create_Some(
-          XksProxyConnectivityType._typeDescriptor(),
           ToDafny.XksProxyConnectivityType(nativeValue.connectivity())
         )
-        : Option.create_None(XksProxyConnectivityType._typeDescriptor());
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> accessKeyId;
     accessKeyId =
       Objects.nonNull(nativeValue.accessKeyId())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.accessKeyId()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> uriEndpoint;
     uriEndpoint =
       Objects.nonNull(nativeValue.uriEndpoint())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.uriEndpoint()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> uriPath;
     uriPath =
       Objects.nonNull(nativeValue.uriPath())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.uriPath()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     Option<DafnySequence<? extends Character>> vpcEndpointServiceName;
     vpcEndpointServiceName =
       Objects.nonNull(nativeValue.vpcEndpointServiceName())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.vpcEndpointServiceName()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new XksProxyConfigurationType(
       connectivity,
       accessKeyId,
@@ -4875,14 +3992,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_AlreadyExistsException(message);
   }
 
@@ -4891,14 +4005,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_CloudHsmClusterInUseException(message);
   }
 
@@ -4909,14 +4020,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_CloudHsmClusterInvalidConfigurationException(message);
   }
 
@@ -4925,14 +4033,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_CloudHsmClusterNotActiveException(message);
   }
 
@@ -4941,14 +4046,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_CloudHsmClusterNotFoundException(message);
   }
 
@@ -4957,14 +4059,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_CloudHsmClusterNotRelatedException(message);
   }
 
@@ -4973,14 +4072,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_ConflictException(message);
   }
 
@@ -4989,14 +4085,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_CustomKeyStoreHasCMKsException(message);
   }
 
@@ -5005,14 +4098,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_CustomKeyStoreInvalidStateException(message);
   }
 
@@ -5021,14 +4111,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_CustomKeyStoreNameInUseException(message);
   }
 
@@ -5037,14 +4124,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_CustomKeyStoreNotFoundException(message);
   }
 
@@ -5053,14 +4137,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_DependencyTimeoutException(message);
   }
 
@@ -5069,14 +4150,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_DisabledException(message);
   }
 
@@ -5085,14 +4163,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_DryRunOperationException(message);
   }
 
@@ -5101,14 +4176,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_ExpiredImportTokenException(message);
   }
 
@@ -5117,14 +4189,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_IncorrectKeyException(message);
   }
 
@@ -5133,14 +4202,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_IncorrectKeyMaterialException(message);
   }
 
@@ -5149,14 +4215,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_IncorrectTrustAnchorException(message);
   }
 
@@ -5165,14 +4228,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_InvalidAliasNameException(message);
   }
 
@@ -5181,14 +4241,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_InvalidArnException(message);
   }
 
@@ -5197,14 +4254,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_InvalidCiphertextException(message);
   }
 
@@ -5213,14 +4267,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_InvalidGrantIdException(message);
   }
 
@@ -5229,14 +4280,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_InvalidGrantTokenException(message);
   }
 
@@ -5245,14 +4293,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_InvalidImportTokenException(message);
   }
 
@@ -5261,14 +4306,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_InvalidKeyUsageException(message);
   }
 
@@ -5277,14 +4319,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_InvalidMarkerException(message);
   }
 
@@ -5293,14 +4332,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_KeyUnavailableException(message);
   }
 
@@ -5309,14 +4345,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_KMSInternalException(message);
   }
 
@@ -5325,14 +4358,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_KMSInvalidMacException(message);
   }
 
@@ -5341,14 +4371,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_KMSInvalidSignatureException(message);
   }
 
@@ -5357,14 +4384,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_KMSInvalidStateException(message);
   }
 
@@ -5373,14 +4397,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_LimitExceededException(message);
   }
 
@@ -5389,14 +4410,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_MalformedPolicyDocumentException(message);
   }
 
@@ -5405,14 +4423,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_NotFoundException(message);
   }
 
@@ -5421,14 +4436,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_TagException(message);
   }
 
@@ -5437,14 +4449,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_UnsupportedOperationException(message);
   }
 
@@ -5453,14 +4462,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_XksKeyAlreadyInUseException(message);
   }
 
@@ -5469,14 +4475,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_XksKeyInvalidConfigurationException(message);
   }
 
@@ -5485,14 +4488,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_XksKeyNotFoundException(message);
   }
 
@@ -5503,14 +4503,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_XksProxyIncorrectAuthenticationCredentialException(
       message
     );
@@ -5521,14 +4518,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_XksProxyInvalidConfigurationException(message);
   }
 
@@ -5537,14 +4531,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_XksProxyInvalidResponseException(message);
   }
 
@@ -5553,14 +4544,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_XksProxyUriEndpointInUseException(message);
   }
 
@@ -5569,14 +4557,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_XksProxyUriInUseException(message);
   }
 
@@ -5585,14 +4570,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_XksProxyUriUnreachableException(message);
   }
 
@@ -5603,14 +4585,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_XksProxyVpcEndpointServiceInUseException(message);
   }
 
@@ -5621,14 +4600,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_XksProxyVpcEndpointServiceInvalidConfigurationException(
       message
     );
@@ -5641,14 +4617,11 @@ public class ToDafny {
     message =
       Objects.nonNull(nativeValue.getMessage())
         ? Option.create_Some(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR),
           software.amazon.smithy.dafny.conversion.ToDafny.Simple.CharacterSequence(
             nativeValue.getMessage()
           )
         )
-        : Option.create_None(
-          DafnySequence._typeDescriptor(TypeDescriptor.CHAR)
-        );
+        : Option.create_None();
     return new Error_XksProxyVpcEndpointServiceNotFoundException(message);
   }
 
@@ -5676,7 +4649,9 @@ public class ToDafny {
         {
           return AlgorithmSpec.create_RSA__AES__KEY__WRAP__SHA__256();
         }
-      case SM2PKE:
+      // BEGIN MANUAL EDIT
+      case SM2_PKE:
+        // END MANUAL EDIT
         {
           return AlgorithmSpec.create_SM2PKE();
         }
@@ -6483,7 +5458,9 @@ public class ToDafny {
         {
           return SigningAlgorithmSpec.create_ECDSA__SHA__512();
         }
-      case SM2DSA:
+      // BEGIN MANUAL EDIT
+      case SM2_DSA:
+        // END MANUAL EDIT
         {
           return SigningAlgorithmSpec.create_SM2DSA();
         }
diff --git a/TestModels/aws-sdks/kms/runtimes/java/src/main/smithy-generated/software/amazon/cryptography/services/kms/internaldafny/ToNative.java b/TestModels/aws-sdks/kms/runtimes/java/src/main/smithy-generated/software/amazon/cryptography/services/kms/internaldafny/ToNative.java
index e8eddd3c..399865e7 100644
--- a/TestModels/aws-sdks/kms/runtimes/java/src/main/smithy-generated/software/amazon/cryptography/services/kms/internaldafny/ToNative.java
+++ b/TestModels/aws-sdks/kms/runtimes/java/src/main/smithy-generated/software/amazon/cryptography/services/kms/internaldafny/ToNative.java
@@ -4542,6 +4542,196 @@ public class ToNative {
     return builder.build();
   }
 
+  // BEGIN MANUAL EDIT
+  public static RuntimeException Error(
+    software.amazon.cryptography.services.kms.internaldafny.types.Error dafnyValue
+  ) {
+    if (dafnyValue.is_AlreadyExistsException()) {
+      return ToNative.Error((Error_AlreadyExistsException) dafnyValue);
+    }
+    if (dafnyValue.is_CloudHsmClusterInUseException()) {
+      return ToNative.Error((Error_CloudHsmClusterInUseException) dafnyValue);
+    }
+    if (dafnyValue.is_CloudHsmClusterInvalidConfigurationException()) {
+      return ToNative.Error(
+        (Error_CloudHsmClusterInvalidConfigurationException) dafnyValue
+      );
+    }
+    if (dafnyValue.is_CloudHsmClusterNotActiveException()) {
+      return ToNative.Error(
+        (Error_CloudHsmClusterNotActiveException) dafnyValue
+      );
+    }
+    if (dafnyValue.is_CloudHsmClusterNotFoundException()) {
+      return ToNative.Error(
+        (Error_CloudHsmClusterNotFoundException) dafnyValue
+      );
+    }
+    if (dafnyValue.is_CloudHsmClusterNotRelatedException()) {
+      return ToNative.Error(
+        (Error_CloudHsmClusterNotRelatedException) dafnyValue
+      );
+    }
+    if (dafnyValue.is_ConflictException()) {
+      return ToNative.Error((Error_ConflictException) dafnyValue);
+    }
+    if (dafnyValue.is_CustomKeyStoreHasCMKsException()) {
+      return ToNative.Error((Error_CustomKeyStoreHasCMKsException) dafnyValue);
+    }
+    if (dafnyValue.is_CustomKeyStoreInvalidStateException()) {
+      return ToNative.Error(
+        (Error_CustomKeyStoreInvalidStateException) dafnyValue
+      );
+    }
+    if (dafnyValue.is_CustomKeyStoreNameInUseException()) {
+      return ToNative.Error(
+        (Error_CustomKeyStoreNameInUseException) dafnyValue
+      );
+    }
+    if (dafnyValue.is_CustomKeyStoreNotFoundException()) {
+      return ToNative.Error((Error_CustomKeyStoreNotFoundException) dafnyValue);
+    }
+    if (dafnyValue.is_DependencyTimeoutException()) {
+      return ToNative.Error((Error_DependencyTimeoutException) dafnyValue);
+    }
+    if (dafnyValue.is_DisabledException()) {
+      return ToNative.Error((Error_DisabledException) dafnyValue);
+    }
+    if (dafnyValue.is_DryRunOperationException()) {
+      return ToNative.Error((Error_DryRunOperationException) dafnyValue);
+    }
+    if (dafnyValue.is_ExpiredImportTokenException()) {
+      return ToNative.Error((Error_ExpiredImportTokenException) dafnyValue);
+    }
+    if (dafnyValue.is_IncorrectKeyException()) {
+      return ToNative.Error((Error_IncorrectKeyException) dafnyValue);
+    }
+    if (dafnyValue.is_IncorrectKeyMaterialException()) {
+      return ToNative.Error((Error_IncorrectKeyMaterialException) dafnyValue);
+    }
+    if (dafnyValue.is_IncorrectTrustAnchorException()) {
+      return ToNative.Error((Error_IncorrectTrustAnchorException) dafnyValue);
+    }
+    if (dafnyValue.is_InvalidAliasNameException()) {
+      return ToNative.Error((Error_InvalidAliasNameException) dafnyValue);
+    }
+    if (dafnyValue.is_InvalidArnException()) {
+      return ToNative.Error((Error_InvalidArnException) dafnyValue);
+    }
+    if (dafnyValue.is_InvalidCiphertextException()) {
+      return ToNative.Error((Error_InvalidCiphertextException) dafnyValue);
+    }
+    if (dafnyValue.is_InvalidGrantIdException()) {
+      return ToNative.Error((Error_InvalidGrantIdException) dafnyValue);
+    }
+    if (dafnyValue.is_InvalidGrantTokenException()) {
+      return ToNative.Error((Error_InvalidGrantTokenException) dafnyValue);
+    }
+    if (dafnyValue.is_InvalidImportTokenException()) {
+      return ToNative.Error((Error_InvalidImportTokenException) dafnyValue);
+    }
+    if (dafnyValue.is_InvalidKeyUsageException()) {
+      return ToNative.Error((Error_InvalidKeyUsageException) dafnyValue);
+    }
+    if (dafnyValue.is_InvalidMarkerException()) {
+      return ToNative.Error((Error_InvalidMarkerException) dafnyValue);
+    }
+    if (dafnyValue.is_KeyUnavailableException()) {
+      return ToNative.Error((Error_KeyUnavailableException) dafnyValue);
+    }
+    if (dafnyValue.is_KMSInternalException()) {
+      return ToNative.Error((Error_KMSInternalException) dafnyValue);
+    }
+    if (dafnyValue.is_KMSInvalidMacException()) {
+      return ToNative.Error((Error_KMSInvalidMacException) dafnyValue);
+    }
+    if (dafnyValue.is_KMSInvalidSignatureException()) {
+      return ToNative.Error((Error_KMSInvalidSignatureException) dafnyValue);
+    }
+    if (dafnyValue.is_KMSInvalidStateException()) {
+      return ToNative.Error((Error_KMSInvalidStateException) dafnyValue);
+    }
+    if (dafnyValue.is_LimitExceededException()) {
+      return ToNative.Error((Error_LimitExceededException) dafnyValue);
+    }
+    if (dafnyValue.is_MalformedPolicyDocumentException()) {
+      return ToNative.Error(
+        (Error_MalformedPolicyDocumentException) dafnyValue
+      );
+    }
+    if (dafnyValue.is_NotFoundException()) {
+      return ToNative.Error((Error_NotFoundException) dafnyValue);
+    }
+    if (dafnyValue.is_TagException()) {
+      return ToNative.Error((Error_TagException) dafnyValue);
+    }
+    if (dafnyValue.is_UnsupportedOperationException()) {
+      return ToNative.Error((Error_UnsupportedOperationException) dafnyValue);
+    }
+    if (dafnyValue.is_XksKeyAlreadyInUseException()) {
+      return ToNative.Error((Error_XksKeyAlreadyInUseException) dafnyValue);
+    }
+    if (dafnyValue.is_XksKeyInvalidConfigurationException()) {
+      return ToNative.Error(
+        (Error_XksKeyInvalidConfigurationException) dafnyValue
+      );
+    }
+    if (dafnyValue.is_XksKeyNotFoundException()) {
+      return ToNative.Error((Error_XksKeyNotFoundException) dafnyValue);
+    }
+    if (dafnyValue.is_XksProxyIncorrectAuthenticationCredentialException()) {
+      return ToNative.Error(
+        (Error_XksProxyIncorrectAuthenticationCredentialException) dafnyValue
+      );
+    }
+    if (dafnyValue.is_XksProxyInvalidConfigurationException()) {
+      return ToNative.Error(
+        (Error_XksProxyInvalidConfigurationException) dafnyValue
+      );
+    }
+    if (dafnyValue.is_XksProxyInvalidResponseException()) {
+      return ToNative.Error(
+        (Error_XksProxyInvalidResponseException) dafnyValue
+      );
+    }
+    if (dafnyValue.is_XksProxyUriEndpointInUseException()) {
+      return ToNative.Error(
+        (Error_XksProxyUriEndpointInUseException) dafnyValue
+      );
+    }
+    if (dafnyValue.is_XksProxyUriInUseException()) {
+      return ToNative.Error((Error_XksProxyUriInUseException) dafnyValue);
+    }
+    if (dafnyValue.is_XksProxyUriUnreachableException()) {
+      return ToNative.Error((Error_XksProxyUriUnreachableException) dafnyValue);
+    }
+    if (dafnyValue.is_XksProxyVpcEndpointServiceInUseException()) {
+      return ToNative.Error(
+        (Error_XksProxyVpcEndpointServiceInUseException) dafnyValue
+      );
+    }
+    if (
+      dafnyValue.is_XksProxyVpcEndpointServiceInvalidConfigurationException()
+    ) {
+      return ToNative.Error(
+        (Error_XksProxyVpcEndpointServiceInvalidConfigurationException) dafnyValue
+      );
+    }
+    if (dafnyValue.is_XksProxyVpcEndpointServiceNotFoundException()) {
+      return ToNative.Error(
+        (Error_XksProxyVpcEndpointServiceNotFoundException) dafnyValue
+      );
+    }
+    if (dafnyValue.is_Opaque()) {
+      return ToNative.Error((Error_Opaque) dafnyValue);
+    }
+    // TODO This should indicate a codegen bug; every error Should have been taken care of.
+    return new IllegalStateException(
+      String.format("Unknown error thrown while calling KMS. %s", dafnyValue)
+    );
+  }
+
+  // END MANUAL EDIT
   public static KmsClient TrentService(IKMSClient dafnyValue) {
     return ((Shim) dafnyValue).impl();
   }
